.TH "thread_pair" 3 "Wed May 10 2023" "Version 01.00" "Dispatcher TCP/IP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
thread_pair
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <thread_pair\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBthread_pair\fP ()=delete"
.br
.ti -1c
.RI "\fBthread_pair\fP (\fBMessageQueue\fP write_queue_id, \fBMessageQueue\fP common_queue, int idx, std::shared_ptr< \fBkeep_running_flags\fP > shpt_keep_running, std::shared_ptr< \fBconnections\fP > shpt_conn, std::shared_ptr< \fBSemaphore\fP > shpt_sem)"
.br
.ti -1c
.RI "\fBthread_pair\fP (const \fBthread_pair\fP &)"
.br
.ti -1c
.RI "\fBthread_pair\fP (\fBthread_pair\fP &&)=delete"
.br
.ti -1c
.RI "\fBthread_pair\fP & \fBoperator=\fP (const \fBthread_pair\fP &)=default"
.br
.ti -1c
.RI "\fBthread_pair\fP & \fBoperator=\fP (\fBthread_pair\fP &&)=delete"
.br
.ti -1c
.RI "void \fBreader_thread\fP (int idx_thp)"
.br
.ti -1c
.RI "void \fBwriter_thread\fP (int idx_thp)"
.br
.ti -1c
.RI "int \fBadd_sockdata\fP (\fBsocket_data_t\fP sdt)"
.br
.ti -1c
.RI "int \fBremove_sockdata\fP (const \fBsocket_data_t\fP &sdt)"
.br
.ti -1c
.RI "int \fBget_sockdata_list\fP (std::list< \fBsocket_data_t\fP > &lsdt)"
.br
.ti -1c
.RI "int \fBget_size_of_sock_list\fP () const"
.br
.ti -1c
.RI "int \fBget_read_pipe\fP () const"
.br
.ti -1c
.RI "int \fBget_write_pipe\fP () const"
.br
.ti -1c
.RI "int \fBget_id\fP () const"
.br
.ti -1c
.RI "int \fBget_idx\fP () const"
.br
.ti -1c
.RI "\fBMessageQueue\fP & \fBget_write_queue\fP ()"
.br
.ti -1c
.RI "void \fBPrepare_Msg_Json_To_Send\fP (\fBprotomsg::st_protomsg\fP &v_protomsg, std::string msg, Json::Value &json_msg)"
.br
.ti -1c
.RI "void \fBAttending_Read_Socket\fP (\fBsocket_data_t\fP &sdt)"
.br
.ti -1c
.RI "int \fBGetting_Json_Msg_Received\fP (std::string &msgin, \fBprotomsg::st_protomsg\fP &v_protomsg, std::string &msgout)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::thread \fBth_r\fP"
.br
.ti -1c
.RI "std::thread \fBth_w\fP"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fB_idx_thp\fP {\-1}"
.br
.ti -1c
.RI "int \fB_pipe\fP [2] {\-1,\-1}"
.br
.ti -1c
.RI "\fBMessageQueue\fP \fB_write_queue\fP"
.br
.ti -1c
.RI "\fBMessageQueue\fP \fB_common_queue\fP"
.br
.ti -1c
.RI "std::mutex \fB_accept_mutex\fP"
.br
.ti -1c
.RI "std::list< \fBsocket_data_t\fP > \fB_sockdata\fP"
.br
.ti -1c
.RI "std::shared_ptr< \fBkeep_running_flags\fP > \fB_sharedptr_keep_running\fP"
.br
.ti -1c
.RI "std::shared_ptr< \fBconnections\fP > \fB_p_cur_connections\fP"
.br
.ti -1c
.RI "std::shared_ptr< \fBSemaphore\fP > \fB_shpt_semIPCfile\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB50\fP of file \fBthread_pair\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "thread_pair::thread_pair ()\fC [delete]\fP"

.SS "thread_pair::thread_pair (\fBMessageQueue\fP write_queue_id, \fBMessageQueue\fP common_queue, int idx, std::shared_ptr< \fBkeep_running_flags\fP > shpt_keep_running, std::shared_ptr< \fBconnections\fP > shpt_conn, std::shared_ptr< \fBSemaphore\fP > shpt_sem)"

.PP
Definition at line \fB5\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "thread_pair::thread_pair (const \fBthread_pair\fP &)\fC [inline]\fP"

.PP
Definition at line \fB76\fP of file \fBthread_pair\&.h\fP\&.
.SS "thread_pair::thread_pair (\fBthread_pair\fP &&)\fC [delete]\fP"

.SH "Member Function Documentation"
.PP 
.SS "int thread_pair::add_sockdata (\fBsocket_data_t\fP sdt)"

.PP
Definition at line \fB280\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "void thread_pair::Attending_Read_Socket (\fBsocket_data_t\fP & sdt)"

.PP
Definition at line \fB33\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "int thread_pair::get_id () const\fC [inline]\fP"

.PP
Definition at line \fB91\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::get_idx () const\fC [inline]\fP"

.PP
Definition at line \fB92\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::get_read_pipe () const\fC [inline]\fP"

.PP
Definition at line \fB89\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::get_size_of_sock_list () const\fC [inline]\fP"

.PP
Definition at line \fB88\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::get_sockdata_list (std::list< \fBsocket_data_t\fP > & lsdt)"

.PP
Definition at line \fB308\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "int thread_pair::get_write_pipe () const\fC [inline]\fP"

.PP
Definition at line \fB90\fP of file \fBthread_pair\&.h\fP\&.
.SS "\fBMessageQueue\fP & thread_pair::get_write_queue ()\fC [inline]\fP"

.PP
Definition at line \fB93\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::Getting_Json_Msg_Received (std::string & msgin, \fBprotomsg::st_protomsg\fP & v_protomsg, std::string & msgout)"

.PP
Definition at line \fB93\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "\fBthread_pair\fP & thread_pair::operator= (const \fBthread_pair\fP &)\fC [default]\fP"

.SS "\fBthread_pair\fP & thread_pair::operator= (\fBthread_pair\fP &&)\fC [delete]\fP"

.SS "void thread_pair::Prepare_Msg_Json_To_Send (\fBprotomsg::st_protomsg\fP & v_protomsg, std::string msg, Json::Value & json_msg)"

.PP
Definition at line \fB211\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "void thread_pair::reader_thread (int idx_thp)"

.PP
Definition at line \fB122\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "int thread_pair::remove_sockdata (const \fBsocket_data_t\fP & sdt)"

.PP
Definition at line \fB290\fP of file \fBthread_pair\&.cpp\fP\&.
.SS "void thread_pair::writer_thread (int idx_thp)"

.PP
Definition at line \fB222\fP of file \fBthread_pair\&.cpp\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::mutex thread_pair::_accept_mutex\fC [private]\fP"

.PP
Definition at line \fB61\fP of file \fBthread_pair\&.h\fP\&.
.SS "\fBMessageQueue\fP thread_pair::_common_queue\fC [private]\fP"

.PP
Definition at line \fB60\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::_idx_thp {\-1}\fC [private]\fP"

.PP
Definition at line \fB57\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::shared_ptr<\fBconnections\fP> thread_pair::_p_cur_connections\fC [private]\fP"

.PP
Definition at line \fB65\fP of file \fBthread_pair\&.h\fP\&.
.SS "int thread_pair::_pipe[2] {\-1,\-1}\fC [private]\fP"

.PP
Definition at line \fB58\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::shared_ptr<\fBkeep_running_flags\fP> thread_pair::_sharedptr_keep_running\fC [private]\fP"

.PP
Definition at line \fB64\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::shared_ptr<\fBSemaphore\fP> thread_pair::_shpt_semIPCfile\fC [private]\fP"

.PP
Definition at line \fB67\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::list<\fBsocket_data_t\fP> thread_pair::_sockdata\fC [private]\fP"

.PP
Definition at line \fB63\fP of file \fBthread_pair\&.h\fP\&.
.SS "\fBMessageQueue\fP thread_pair::_write_queue\fC [private]\fP"

.PP
Definition at line \fB59\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::thread thread_pair::th_r"

.PP
Definition at line \fB53\fP of file \fBthread_pair\&.h\fP\&.
.SS "std::thread thread_pair::th_w"

.PP
Definition at line \fB54\fP of file \fBthread_pair\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Dispatcher TCP/IP from the source code\&.
