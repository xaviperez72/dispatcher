.TH "Socket" 3 "Wed May 10 2023" "Version 01.00" "Dispatcher TCP/IP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Socket
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Socket\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSocket\fP ()"
.br
.ti -1c
.RI "\fBSocket\fP (int domain, int type, int protocol)"
.br
.ti -1c
.RI "int \fBbind\fP (std::string ip, std::string \fBport\fP)"
.br
.ti -1c
.RI "int \fBconnect\fP (std::string ip, std::string \fBport\fP)"
.br
.ti -1c
.RI "int \fBlisten\fP (int max_queue)"
.br
.ti -1c
.RI "\fBSocket\fP \fBaccept\fP ()"
.br
.ti -1c
.RI "int \fBsocket_write\fP (std::string msg)"
.br
.ti -1c
.RI "int \fBsocket_read\fP (std::string &buf, int len)"
.br
.ti -1c
.RI "int \fBsocket_safe_read\fP (std::string &buf, int len, int seconds)"
.br
.ti -1c
.RI "int \fBsocket_writeTo\fP (std::string msg, std::string ip, std::string \fBport\fP)"
.br
.ti -1c
.RI "int \fBsocket_readFrom\fP (std::string &buf, int len, std::string ip, std::string \fBport\fP)"
.br
.ti -1c
.RI "int \fBsocket_set_opt\fP (int level, int optname, void *optval)"
.br
.ti -1c
.RI "int \fBsocket_get_opt\fP (int level, int optname, void *optval)"
.br
.ti -1c
.RI "int \fBset_blocking\fP ()"
.br
.ti -1c
.RI "int \fBset_non_blocking\fP ()"
.br
.ti -1c
.RI "int \fBsocket_shutdown\fP (int how)"
.br
.ti -1c
.RI "void \fBclose\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static int \fBselect\fP (std::vector< \fBSocket\fP > *reads, std::vector< \fBSocket\fP > *writes, std::vector< \fBSocket\fP > *exceptions, int seconds)"
.br
.ti -1c
.RI "static std::string \fBipFromHostName\fP (std::string hostname)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBsock\fP"
.br
.ti -1c
.RI "std::string \fBaddress\fP"
.br
.ti -1c
.RI "std::string \fBport\fP"
.br
.ti -1c
.RI "struct addrinfo \fBaddress_info\fP"
.br
.ti -1c
.RI "struct sockaddr_storage \fBtheir_addr\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB26\fP of file \fBSocket\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Socket::Socket ()"

.PP
Definition at line \fB12\fP of file \fBSocket\&.cpp\fP\&.
.SS "Socket::Socket (int domain, int type, int protocol)"

.PP
Definition at line \fB15\fP of file \fBSocket\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBSocket\fP Socket::accept ()"

.PP
Definition at line \fB113\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::bind (std::string ip, std::string port)"

.PP
Definition at line \fB31\fP of file \fBSocket\&.cpp\fP\&.
.SS "void Socket::close ()"

.PP
Definition at line \fB279\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::connect (std::string ip, std::string port)"

.PP
Definition at line \fB67\fP of file \fBSocket\&.cpp\fP\&.
.SS "string Socket::ipFromHostName (std::string hostname)\fC [static]\fP"

.PP
Definition at line \fB360\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::listen (int max_queue)"

.PP
Definition at line \fB103\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::select (std::vector< \fBSocket\fP > * reads, std::vector< \fBSocket\fP > * writes, std::vector< \fBSocket\fP > * exceptions, int seconds)\fC [static]\fP"

.PP
Definition at line \fB283\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::set_blocking ()"

.PP
Definition at line \fB240\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::set_non_blocking ()"

.PP
Definition at line \fB255\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_get_opt (int level, int optname, void * optval)"

.PP
Definition at line \fB230\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_read (std::string & buf, int len)"

.PP
Definition at line \fB165\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_readFrom (std::string & buf, int len, std::string ip, std::string port)"

.PP
Definition at line \fB198\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_safe_read (std::string & buf, int len, int seconds)"

.PP
Definition at line \fB146\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_set_opt (int level, int optname, void * optval)"

.PP
Definition at line \fB220\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_shutdown (int how)"

.PP
Definition at line \fB270\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_write (std::string msg)"

.PP
Definition at line \fB136\fP of file \fBSocket\&.cpp\fP\&.
.SS "int Socket::socket_writeTo (std::string msg, std::string ip, std::string port)"

.PP
Definition at line \fB176\fP of file \fBSocket\&.cpp\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::string Socket::address"

.PP
Definition at line \fB30\fP of file \fBSocket\&.h\fP\&.
.SS "struct addrinfo Socket::address_info"

.PP
Definition at line \fB32\fP of file \fBSocket\&.h\fP\&.
.SS "std::string Socket::port"

.PP
Definition at line \fB31\fP of file \fBSocket\&.h\fP\&.
.SS "int Socket::sock"

.PP
Definition at line \fB29\fP of file \fBSocket\&.h\fP\&.
.SS "struct sockaddr_storage Socket::their_addr"

.PP
Definition at line \fB33\fP of file \fBSocket\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Dispatcher TCP/IP from the source code\&.
