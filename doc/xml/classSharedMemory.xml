<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classSharedMemory" kind="class" language="C++" prot="public" final="yes">
    <compoundname>SharedMemory</compoundname>
    <basecompoundref refid="classIpc" prot="public" virt="non-virtual">Ipc</basecompoundref>
    <includes refid="ipclib_8h" local="no">ipclib.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* SharedMemory::_shmaddr</definition>
        <argsstring></argsstring>
        <name>_shmaddr</name>
        <qualifiedname>SharedMemory::_shmaddr</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="157" column="6" bodyfile="src/ipclib.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSharedMemory_1a2705b16bf1af906e68824582dd849e69" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SharedMemory::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <qualifiedname>SharedMemory::_size</qualifiedname>
        <initializer>{4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="158" column="5" bodyfile="src/ipclib.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000" prot="private" static="no" mutable="no">
        <type>shmid_ds</type>
        <definition>shmid_ds SharedMemory::_st</definition>
        <argsstring></argsstring>
        <name>_st</name>
        <qualifiedname>SharedMemory::_st</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="159" column="14" bodyfile="src/ipclib.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SharedMemory::get_stat</definition>
        <argsstring>(int shmid)</argsstring>
        <name>get_stat</name>
        <qualifiedname>SharedMemory::get_stat</qualifiedname>
        <param>
          <type>int</type>
          <declname>shmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="161" column="9" bodyfile="src/ipclib.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSharedMemory_1aa0c0f01a0d79e3e806f93fd71a3a69f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::SharedMemory</definition>
        <argsstring>(const key_t key, int size, bool deleteOnExit)</argsstring>
        <name>SharedMemory</name>
        <qualifiedname>SharedMemory::SharedMemory</qualifiedname>
        <param>
          <type>const key_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deleteOnExit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>(default IPC_PRIVATE) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleteOnExit</parametername>
</parameternamelist>
<parameterdescription>
<para>= false (don&apos;t remove semaphore on destruction. true = remove it) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="171" column="1" bodyfile="src/ipclib.cpp" bodystart="181" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1adbbf800cc0d7ac89fdc7372c2755b4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::SharedMemory</definition>
        <argsstring>(int shmid)</argsstring>
        <name>SharedMemory</name>
        <qualifiedname>SharedMemory::SharedMemory</qualifiedname>
        <param>
          <type>int</type>
          <declname>shmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shmid</parametername>
</parameternamelist>
<parameterdescription>
<para>Id for an existing <ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="178" column="5" bodyfile="src/ipclib.cpp" bodystart="155" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a851a8d425f9c1e6f49237efd97628df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::SharedMemory</definition>
        <argsstring>()=default</argsstring>
        <name>SharedMemory</name>
        <qualifiedname>SharedMemory::SharedMemory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="180" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1ad567d83d65ba65b39ff20bfbd4ac9058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::SharedMemory</definition>
        <argsstring>(SharedMemory const &amp;)=default</argsstring>
        <name>SharedMemory</name>
        <qualifiedname>SharedMemory::SharedMemory</qualifiedname>
        <param>
          <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="181" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a6ab87c1bdf715820514a716c1c463a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::SharedMemory</definition>
        <argsstring>(SharedMemory &amp;&amp;)=default</argsstring>
        <name>SharedMemory</name>
        <qualifiedname>SharedMemory::SharedMemory</qualifiedname>
        <param>
          <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="182" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a07aa684777d2cde7db164484f13a3686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> &amp;</type>
        <definition>SharedMemory &amp; SharedMemory::operator=</definition>
        <argsstring>(SharedMemory const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>SharedMemory::operator=</qualifiedname>
        <param>
          <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="183" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a49be1c52b8d78eb9c23f604cf140a177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> &amp;</type>
        <definition>SharedMemory &amp; SharedMemory::operator=</definition>
        <argsstring>(SharedMemory &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>SharedMemory::operator=</qualifiedname>
        <param>
          <type><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="184" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1adc56751ce1b30224689e71cd3b6c09be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SharedMemory::~SharedMemory</definition>
        <argsstring>()</argsstring>
        <name>~SharedMemory</name>
        <qualifiedname>SharedMemory::~SharedMemory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="185" column="5" bodyfile="src/ipclib.cpp" bodystart="221" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a2b41bc86dbf6bc51ff723a763cf27c73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * SharedMemory::getaddr</definition>
        <argsstring>() const</argsstring>
        <name>getaddr</name>
        <qualifiedname>SharedMemory::getaddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="188" column="10" bodyfile="src/ipclib.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classSharedMemory_1a400bd582aa803162fed6b241f784a1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SharedMemory::get_nattach</definition>
        <argsstring>()</argsstring>
        <name>get_nattach</name>
        <qualifiedname>SharedMemory::get_nattach</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ipclib.h" line="190" column="9" bodyfile="src/ipclib.cpp" bodystart="145" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Shared Memory Object IPC (<ref refid="ipclib_8h" kindref="compound">ipclib.h</ref>) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ipc</label>
        <link refid="classIpc"/>
      </node>
      <node id="1">
        <label>SharedMemory</label>
        <link refid="classSharedMemory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Ipc</label>
        <link refid="classIpc"/>
      </node>
      <node id="1">
        <label>SharedMemory</label>
        <link refid="classSharedMemory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/ipclib.h" line="155" column="1" bodyfile="src/ipclib.h" bodystart="156" bodyend="191"/>
    <listofallmembers>
      <member refid="classIpc_1ac3d97612d5c63128e5b57e3fe190a91b" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_deleteOnExit</name></member>
      <member refid="classIpc_1ad7ed294460891e9b1027f949d286eca7" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_flags</name></member>
      <member refid="classIpc_1ab86fc30de66fe77ab899462638dd052f" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_id</name></member>
      <member refid="classIpc_1a687f050130e1b7c74713385783bd0228" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_key</name></member>
      <member refid="classIpc_1ac6c02c8ae2a0a8a267e6f836742f2b2b" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_ok</name></member>
      <member refid="classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_shmaddr</name></member>
      <member refid="classSharedMemory_1a2705b16bf1af906e68824582dd849e69" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_size</name></member>
      <member refid="classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>_st</name></member>
      <member refid="classIpc_1a97d909e0c622ac19431c874f187c505b" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>DisableDelete</name></member>
      <member refid="classIpc_1adc11c0e6cf5f3642877bc40ae8b50e65" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>EnableDelete</name></member>
      <member refid="classSharedMemory_1a400bd582aa803162fed6b241f784a1fa" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>get_nattach</name></member>
      <member refid="classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6" prot="private" virt="non-virtual"><scope>SharedMemory</scope><name>get_stat</name></member>
      <member refid="classSharedMemory_1a2b41bc86dbf6bc51ff723a763cf27c73" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>getaddr</name></member>
      <member refid="classIpc_1a7faa2e8471f51b76efc446ea9330c49c" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>getDeleteOnExit</name></member>
      <member refid="classIpc_1a4b2e0e102d3e0991129b0fc3a511e1e6" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>getflags</name></member>
      <member refid="classIpc_1a3e50666a681532a44ed32a283e8e2979" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>getid</name></member>
      <member refid="classIpc_1aa0ad768b2ee58c3c6795f0e23aaa29eb" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>getkey</name></member>
      <member refid="classIpc_1ad4b53305ca5ea53acc86ca7eab6ce737" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>Ipc</name></member>
      <member refid="classIpc_1a65a9ce942eaca05e24af65e120f692ef" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>Ipc</name></member>
      <member refid="classIpc_1a051dff23481be739a5825c03381ed578" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>Ipc</name></member>
      <member refid="classIpc_1a5966748aff2218b33cf39ef197c7e9a2" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>Ipc</name></member>
      <member refid="classIpc_1a526497b4e34b064f779f300d2d011310" prot="public" virt="virtual"><scope>SharedMemory</scope><name>operator bool</name></member>
      <member refid="classSharedMemory_1a07aa684777d2cde7db164484f13a3686" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>operator=</name></member>
      <member refid="classSharedMemory_1a49be1c52b8d78eb9c23f604cf140a177" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>operator=</name></member>
      <member refid="classIpc_1a8e66cc0c4d1754b3ea8bd2a4195e0776" prot="public" virt="non-virtual" ambiguityscope="Ipc::"><scope>SharedMemory</scope><name>operator=</name></member>
      <member refid="classIpc_1af046c6367b03099fec0826db68a2298d" prot="public" virt="non-virtual" ambiguityscope="Ipc::"><scope>SharedMemory</scope><name>operator=</name></member>
      <member refid="classIpc_1a9f5e7d9248966affeff2533ebf17f060" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>setflags</name></member>
      <member refid="classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>setid</name></member>
      <member refid="classIpc_1a042476ca5bce7de73d906b7413922586" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>setkey</name></member>
      <member refid="classIpc_1aecac89b3a9bdec9833092579712e7cfe" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>setok</name></member>
      <member refid="classSharedMemory_1aa0c0f01a0d79e3e806f93fd71a3a69f9" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classSharedMemory_1adbbf800cc0d7ac89fdc7372c2755b4f4" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classSharedMemory_1a851a8d425f9c1e6f49237efd97628df5" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classSharedMemory_1ad567d83d65ba65b39ff20bfbd4ac9058" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classSharedMemory_1a6ab87c1bdf715820514a716c1c463a56" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classIpc_1a1ecb3e8ee06f9566b9c10a81a64a1797" prot="public" virt="virtual"><scope>SharedMemory</scope><name>~Ipc</name></member>
      <member refid="classSharedMemory_1adc56751ce1b30224689e71cd3b6c09be" prot="public" virt="non-virtual"><scope>SharedMemory</scope><name>~SharedMemory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
