<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classSocket" kind="class" language="C++" prot="public">
    <compoundname>Socket</compoundname>
    <includes refid="Socket_8h" local="no">Socket.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classSocket_1a231ddf6e338a86640e26808b83efeaa1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Socket::sock</definition>
        <argsstring></argsstring>
        <name>sock</name>
        <qualifiedname>Socket::sock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="29" column="9" bodyfile="src/Socket.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1a2708e6a0b9b2b4c2c547757c86848cf4" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Socket::address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <qualifiedname>Socket::address</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="30" column="17" bodyfile="src/Socket.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1af75711bf9c0f0788d7767f836a97c5e6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Socket::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <qualifiedname>Socket::port</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="31" column="17" bodyfile="src/Socket.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1a641d9c790350664e5e90dce7d78bd59a" prot="public" static="no" mutable="no">
        <type>struct addrinfo</type>
        <definition>struct addrinfo Socket::address_info</definition>
        <argsstring></argsstring>
        <name>address_info</name>
        <qualifiedname>Socket::address_info</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="32" column="19" bodyfile="src/Socket.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSocket_1ac4c0caa322e951195f18053bdfdd81ce" prot="public" static="no" mutable="no">
        <type>struct sockaddr_storage</type>
        <definition>struct sockaddr_storage Socket::their_addr</definition>
        <argsstring></argsstring>
        <name>their_addr</name>
        <qualifiedname>Socket::their_addr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="33" column="27" bodyfile="src/Socket.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSocket_1a7c3256c4fc6e2c603df73201049fae5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Socket::Socket</definition>
        <argsstring>()</argsstring>
        <name>Socket</name>
        <qualifiedname>Socket::Socket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="34" column="5" bodyfile="src/Socket.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a87656ab3b60c9f793a426e0cb2d57317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Socket::Socket</definition>
        <argsstring>(int domain, int type, int protocol)</argsstring>
        <name>Socket</name>
        <qualifiedname>Socket::Socket</qualifiedname>
        <param>
          <type>int</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="35" column="5" bodyfile="src/Socket.cpp" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a4f142a9d6ffd312c72bc813797658a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::bind</definition>
        <argsstring>(std::string ip, std::string port)</argsstring>
        <name>bind</name>
        <qualifiedname>Socket::bind</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="36" column="9" bodyfile="src/Socket.cpp" bodystart="31" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1ac57cbd359ac6c4c731dbcebebfc6af5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::connect</definition>
        <argsstring>(std::string ip, std::string port)</argsstring>
        <name>connect</name>
        <qualifiedname>Socket::connect</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="37" column="9" bodyfile="src/Socket.cpp" bodystart="67" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1af4b275979ee2f9b28bbc54c90daae2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::listen</definition>
        <argsstring>(int max_queue)</argsstring>
        <name>listen</name>
        <qualifiedname>Socket::listen</qualifiedname>
        <param>
          <type>int</type>
          <declname>max_queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="38" column="9" bodyfile="src/Socket.cpp" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a3f749d9a206e48a875e8c24f29500a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSocket" kindref="compound">Socket</ref></type>
        <definition>Socket Socket::accept</definition>
        <argsstring>()</argsstring>
        <name>accept</name>
        <qualifiedname>Socket::accept</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="39" column="12" bodyfile="src/Socket.cpp" bodystart="113" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a564eb3f48d8cb31423076e68f8cc1f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_write</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>socket_write</name>
        <qualifiedname>Socket::socket_write</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="40" column="9" bodyfile="src/Socket.cpp" bodystart="136" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1ad7b9a7832dc2384d4f899afd73cb1193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_read</definition>
        <argsstring>(std::string &amp;buf, int len)</argsstring>
        <name>socket_read</name>
        <qualifiedname>Socket::socket_read</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="41" column="9" bodyfile="src/Socket.cpp" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a27b26f9051e8ff3deeb8bfe0f0dea66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_safe_read</definition>
        <argsstring>(std::string &amp;buf, int len, int seconds)</argsstring>
        <name>socket_safe_read</name>
        <qualifiedname>Socket::socket_safe_read</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="42" column="9" bodyfile="src/Socket.cpp" bodystart="146" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1afc14b0a6d28023b8388dc63f1715da65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_writeTo</definition>
        <argsstring>(std::string msg, std::string ip, std::string port)</argsstring>
        <name>socket_writeTo</name>
        <qualifiedname>Socket::socket_writeTo</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="43" column="9" bodyfile="src/Socket.cpp" bodystart="176" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1ab244c6b09f175b4423790886d2eb9486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_readFrom</definition>
        <argsstring>(std::string &amp;buf, int len, std::string ip, std::string port)</argsstring>
        <name>socket_readFrom</name>
        <qualifiedname>Socket::socket_readFrom</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="44" column="9" bodyfile="src/Socket.cpp" bodystart="198" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1acac0892dfa60b7034b662060f640009a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_set_opt</definition>
        <argsstring>(int level, int optname, void *optval)</argsstring>
        <name>socket_set_opt</name>
        <qualifiedname>Socket::socket_set_opt</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>optval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="45" column="9" bodyfile="src/Socket.cpp" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1ab51d01cc80b2a4648086322d9e99417b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_get_opt</definition>
        <argsstring>(int level, int optname, void *optval)</argsstring>
        <name>socket_get_opt</name>
        <qualifiedname>Socket::socket_get_opt</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>optval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="46" column="9" bodyfile="src/Socket.cpp" bodystart="230" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a2a59b2d7eef6873ab1849951fd23ea0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::set_blocking</definition>
        <argsstring>()</argsstring>
        <name>set_blocking</name>
        <qualifiedname>Socket::set_blocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="47" column="9" bodyfile="src/Socket.cpp" bodystart="240" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a28772006630fafe066e1e4db34fc8a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::set_non_blocking</definition>
        <argsstring>()</argsstring>
        <name>set_non_blocking</name>
        <qualifiedname>Socket::set_non_blocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="48" column="9" bodyfile="src/Socket.cpp" bodystart="255" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1af6f86be700a215da342cfaeba37e7c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::socket_shutdown</definition>
        <argsstring>(int how)</argsstring>
        <name>socket_shutdown</name>
        <qualifiedname>Socket::socket_shutdown</qualifiedname>
        <param>
          <type>int</type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="49" column="9" bodyfile="src/Socket.cpp" bodystart="270" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Socket::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <qualifiedname>Socket::close</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="50" column="10" bodyfile="src/Socket.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classSocket_1a8078f3895616b76dae6367e765bc5744" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Socket::select</definition>
        <argsstring>(std::vector&lt; Socket &gt; *reads, std::vector&lt; Socket &gt; *writes, std::vector&lt; Socket &gt; *exceptions, int seconds)</argsstring>
        <name>select</name>
        <qualifiedname>Socket::select</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classSocket" kindref="compound">Socket</ref> &gt; *</type>
          <declname>reads</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classSocket" kindref="compound">Socket</ref> &gt; *</type>
          <declname>writes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classSocket" kindref="compound">Socket</ref> &gt; *</type>
          <declname>exceptions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="51" column="16" bodyfile="src/Socket.cpp" bodystart="283" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classSocket_1a49b6d9bbc776522388ce7c13d3a0ac57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Socket::ipFromHostName</definition>
        <argsstring>(std::string hostname)</argsstring>
        <name>ipFromHostName</name>
        <qualifiedname>Socket::ipFromHostName</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Socket.h" line="52" column="24" bodyfile="src/Socket.cpp" bodystart="360" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Socket.h" line="26" column="1" bodyfile="src/Socket.h" bodystart="27" bodyend="53"/>
    <listofallmembers>
      <member refid="classSocket_1a3f749d9a206e48a875e8c24f29500a93" prot="public" virt="non-virtual"><scope>Socket</scope><name>accept</name></member>
      <member refid="classSocket_1a2708e6a0b9b2b4c2c547757c86848cf4" prot="public" virt="non-virtual"><scope>Socket</scope><name>address</name></member>
      <member refid="classSocket_1a641d9c790350664e5e90dce7d78bd59a" prot="public" virt="non-virtual"><scope>Socket</scope><name>address_info</name></member>
      <member refid="classSocket_1a4f142a9d6ffd312c72bc813797658a1b" prot="public" virt="non-virtual"><scope>Socket</scope><name>bind</name></member>
      <member refid="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" prot="public" virt="non-virtual"><scope>Socket</scope><name>close</name></member>
      <member refid="classSocket_1ac57cbd359ac6c4c731dbcebebfc6af5c" prot="public" virt="non-virtual"><scope>Socket</scope><name>connect</name></member>
      <member refid="classSocket_1a49b6d9bbc776522388ce7c13d3a0ac57" prot="public" virt="non-virtual"><scope>Socket</scope><name>ipFromHostName</name></member>
      <member refid="classSocket_1af4b275979ee2f9b28bbc54c90daae2e9" prot="public" virt="non-virtual"><scope>Socket</scope><name>listen</name></member>
      <member refid="classSocket_1af75711bf9c0f0788d7767f836a97c5e6" prot="public" virt="non-virtual"><scope>Socket</scope><name>port</name></member>
      <member refid="classSocket_1a8078f3895616b76dae6367e765bc5744" prot="public" virt="non-virtual"><scope>Socket</scope><name>select</name></member>
      <member refid="classSocket_1a2a59b2d7eef6873ab1849951fd23ea0b" prot="public" virt="non-virtual"><scope>Socket</scope><name>set_blocking</name></member>
      <member refid="classSocket_1a28772006630fafe066e1e4db34fc8a8d" prot="public" virt="non-virtual"><scope>Socket</scope><name>set_non_blocking</name></member>
      <member refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" prot="public" virt="non-virtual"><scope>Socket</scope><name>sock</name></member>
      <member refid="classSocket_1a7c3256c4fc6e2c603df73201049fae5a" prot="public" virt="non-virtual"><scope>Socket</scope><name>Socket</name></member>
      <member refid="classSocket_1a87656ab3b60c9f793a426e0cb2d57317" prot="public" virt="non-virtual"><scope>Socket</scope><name>Socket</name></member>
      <member refid="classSocket_1ab51d01cc80b2a4648086322d9e99417b" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_get_opt</name></member>
      <member refid="classSocket_1ad7b9a7832dc2384d4f899afd73cb1193" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_read</name></member>
      <member refid="classSocket_1ab244c6b09f175b4423790886d2eb9486" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_readFrom</name></member>
      <member refid="classSocket_1a27b26f9051e8ff3deeb8bfe0f0dea66f" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_safe_read</name></member>
      <member refid="classSocket_1acac0892dfa60b7034b662060f640009a" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_set_opt</name></member>
      <member refid="classSocket_1af6f86be700a215da342cfaeba37e7c0f" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_shutdown</name></member>
      <member refid="classSocket_1a564eb3f48d8cb31423076e68f8cc1f54" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_write</name></member>
      <member refid="classSocket_1afc14b0a6d28023b8388dc63f1715da65" prot="public" virt="non-virtual"><scope>Socket</scope><name>socket_writeTo</name></member>
      <member refid="classSocket_1ac4c0caa322e951195f18053bdfdd81ce" prot="public" virt="non-virtual"><scope>Socket</scope><name>their_addr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
