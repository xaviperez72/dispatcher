<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="thread__pair_8cpp" kind="file" language="C++">
    <compoundname>thread_pair.cpp</compoundname>
    <includes refid="thread__pair_8h" local="yes">thread_pair.h</includes>
    <incdepgraph>
      <node id="37">
        <label>Socket.h</label>
        <link refid="Socket_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>checker_pids.h</label>
        <link refid="checker__pids_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>connections.h</label>
        <link refid="connections_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ipclib.h</label>
        <link refid="ipclib_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>protocol_msg.h</label>
        <link refid="protocol__msg_8h"/>
      </node>
      <node id="1">
        <label>src/thread_pair.cpp</label>
        <link refid="thread__pair_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>thread_pair.h</label>
        <link refid="thread__pair_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="43">
        <label>arpa/inet.h</label>
      </node>
      <node id="3">
        <label>atomic</label>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>condition_variable</label>
      </node>
      <node id="23">
        <label>errno.h</label>
      </node>
      <node id="41">
        <label>fcntl.h</label>
      </node>
      <node id="33">
        <label>functional</label>
      </node>
      <node id="7">
        <label>future</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>json/json.h</label>
      </node>
      <node id="11">
        <label>json/value.h</label>
      </node>
      <node id="8">
        <label>list</label>
      </node>
      <node id="18">
        <label>memory</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="42">
        <label>netdb.h</label>
      </node>
      <node id="36">
        <label>netinet/in.h</label>
      </node>
      <node id="14">
        <label>plog/Log.h</label>
      </node>
      <node id="30">
        <label>signal.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
      <node id="38">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="22">
        <label>string.h</label>
      </node>
      <node id="40">
        <label>sys/ioctl.h</label>
      </node>
      <node id="24">
        <label>sys/ipc.h</label>
      </node>
      <node id="26">
        <label>sys/msg.h</label>
      </node>
      <node id="27">
        <label>sys/sem.h</label>
      </node>
      <node id="25">
        <label>sys/shm.h</label>
      </node>
      <node id="35">
        <label>sys/socket.h</label>
      </node>
      <node id="21">
        <label>sys/stat.h</label>
      </node>
      <node id="20">
        <label>sys/types.h</label>
      </node>
      <node id="44">
        <label>sys/un.h</label>
      </node>
      <node id="28">
        <label>sys/wait.h</label>
      </node>
      <node id="6">
        <label>thread</label>
      </node>
      <node id="39">
        <label>unistd.h</label>
      </node>
      <node id="31">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread__pair_8h" kindref="compound">thread_pair.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classthread__pair_1acf8b3f678e83f280cb66f7d1ee5d0fd3" refkind="member"><highlight class="normal"><ref refid="classthread__pair_1a436e3475859bcebbc976a3c6105ce794" kindref="member">thread_pair::thread_pair</ref>(<ref refid="classMessageQueue" kindref="compound">MessageQueue</ref><sp/>write_queue_id,<sp/><ref refid="classMessageQueue" kindref="compound">MessageQueue</ref><sp/>common_queue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_thp,<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;keep_running_flags&gt;<sp/>shpt_keep_running,<sp/>std::shared_ptr&lt;connections&gt;<sp/>shpt_conn,<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::shared_ptr&lt;signal_synch&gt;<sp/>shpt_sigsyn,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Semaphore&gt;<sp/>shpt_sem)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_shpt_sigsyn<sp/>=<sp/>shpt_sigsyn;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093" kindref="member">_write_queue</ref><sp/>=<sp/>write_queue_id;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093" kindref="member">_write_queue</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;write_queue<sp/>not<sp/>operative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(common_queue<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;read_queue<sp/>(common<sp/>queue)<sp/>not<sp/>operative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_accept_mutex<sp/>=<sp/>std::make_shared&lt;mutex&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1af0f10327ce77aa56346835d1132a93ad" kindref="member">_common_queue</ref><sp/>=<sp/>common_queue;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e" kindref="member">_idx_thp</ref><sp/>=<sp/>idx_thp;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28" kindref="member">_sharedptr_keep_running</ref><sp/>=<sp/>shpt_keep_running;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref><sp/>=<sp/>shpt_conn;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref><sp/>=<sp/>shpt_sem;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe(<ref refid="classthread__pair_1a48ce2674603551cda5da4c526bd0ceed" kindref="member">_pipe</ref>)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>pipe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a5f91b0c7065a5b4ea1d9b2833eec0ee2" kindref="member">th_r</ref><sp/>=<sp/>std::thread(&amp;<ref refid="classthread__pair_1a542da55488a6cb54517473429d234801" kindref="member">thread_pair::reader_thread</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx_thp);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1aaab23c5aeabc65a9d6eba6ef6d56e4b3" kindref="member">th_w</ref><sp/>=<sp/>std::thread(&amp;<ref refid="classthread__pair_1a6ebef75114e800552bdd19598f0964ad" kindref="member">thread_pair::writer_thread</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx_thp);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6" kindref="member">thread_pair::Attending_Read_Socket</ref>(<ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>&amp;sdt)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSocket" kindref="compound">Socket</ref><sp/>sock;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>sock.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref><sp/>=<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msgin;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msgout;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprotomsg_1_1st__protomsg" kindref="compound">protomsg::st_protomsg</ref><sp/>v_protomsg;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>from<sp/>sd<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((status=sock.<ref refid="classSocket_1ad7b9a7832dc2384d4f899afd73cb1193" kindref="member">socket_read</ref>(msgin,1024))<sp/>&lt;=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Socket_read<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errno<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>sd:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IP:Port:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(sdt.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_addr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ntohs(sdt.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_port);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" kindref="member">remove_sockdata</ref>(sdt);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref>-&gt;unregister_conn(sdt.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref>,<sp/>*<ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>sdt.<ref refid="structsocket__data__t_1a6540b92dc049e8e3b2be6033d7084111" kindref="member">rcvinfo</ref><sp/>=<sp/>msgin;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO<sp/>-<sp/>Check<sp/>IP<sp/>is<sp/>in<sp/>table.<sp/>Not<sp/>needed<sp/>since<sp/>AccceptThread<sp/>checks<sp/>for<sp/>valid<sp/>IP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classthread__pair_1ac706f952db441120c6b7ccc709193786" kindref="member">Getting_Json_Msg_Received</ref>(msgin,<sp/>v_protomsg,<sp/>msgout))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>Message<sp/>Format<sp/>(json):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msgin;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>sd:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IP:Port:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(sdt.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_addr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ntohs(sdt.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_port);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>back<sp/>MSGIN<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ad9b11ac85c4ab8985585d33dadd1dddc" kindref="member">q_write</ref><sp/>=<sp/><ref refid="classthread__pair_1af0f10327ce77aa56346835d1132a93ad" kindref="member">_common_queue</ref>.<ref refid="classIpc_1a3e50666a681532a44ed32a283e8e2979" kindref="member">getid</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>usefull<sp/>in<sp/>this<sp/>case...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093" kindref="member">_write_queue</ref>.<ref refid="classMessageQueue_1ac3138a4b8f10868f1df70519257fa45f" kindref="member">send</ref>(&amp;v_protomsg,<sp/>msgin))<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>to<sp/>send<sp/>to<sp/>Writer_Thread<sp/>through<sp/>_write_queue:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" kindref="member">remove_sockdata</ref>(sdt);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref>-&gt;unregister_conn(sdt.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref>,<sp/>*<ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>to<sp/>common<sp/>queue<sp/>for<sp/>TuxCli...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>MSGOUT<sp/>to<sp/>common<sp/>queue<sp/>to<sp/>process<sp/>by<sp/>TuxCli<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ad9b11ac85c4ab8985585d33dadd1dddc" kindref="member">q_write</ref><sp/>=<sp/><ref refid="classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093" kindref="member">_write_queue</ref>.<ref refid="classIpc_1a3e50666a681532a44ed32a283e8e2979" kindref="member">getid</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>to<sp/>respond<sp/>to<sp/>proper<sp/>Writer_Thread...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classthread__pair_1af0f10327ce77aa56346835d1132a93ad" kindref="member">_common_queue</ref>.<ref refid="classMessageQueue_1ac3138a4b8f10868f1df70519257fa45f" kindref="member">send</ref>(&amp;v_protomsg,<sp/>msgout))<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>to<sp/>send<sp/>to<sp/>TuxCli<sp/>through<sp/>_common_queue:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" kindref="member">remove_sockdata</ref>(sdt);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref>-&gt;unregister_conn(sdt.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref>,<sp/>*<ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classthread__pair_1ac706f952db441120c6b7ccc709193786" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1ac706f952db441120c6b7ccc709193786" kindref="member">thread_pair::Getting_Json_Msg_Received</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;msgin,<sp/><ref refid="structprotomsg_1_1st__protomsg" kindref="compound">protomsg::st_protomsg</ref><sp/>&amp;v_protomsg,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;msgout)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>json_msg;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>ss(msgin);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>json_msg;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a7930ab296d19b6d7217ae1acf09229f3" kindref="member">terf</ref><sp/>=<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;TERF&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a04f17c6355d8722524757604afadae94" kindref="member">terl</ref><sp/>=<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;TERL&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8" kindref="member">guid</ref>,<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;GUID&quot;</highlight><highlight class="normal">].asCString(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8" kindref="member">guid</ref>)-1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700" kindref="member">pid</ref>,<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;PID&quot;</highlight><highlight class="normal">].asCString(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700" kindref="member">pid</ref>)-1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9" kindref="member">aid</ref>,<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;AID&quot;</highlight><highlight class="normal">].asCString(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9" kindref="member">aid</ref>)-1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172" kindref="member">cabx</ref>,<sp/>json_msg[</highlight><highlight class="stringliteral">&quot;CABX&quot;</highlight><highlight class="normal">].asCString(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172" kindref="member">cabx</ref>)-1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>msgout<sp/>=<sp/>std::string(json_msg[</highlight><highlight class="stringliteral">&quot;MSG&quot;</highlight><highlight class="normal">].asCString());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a4da8e282dba03c825108806b9ecbc3e5" kindref="member">mtype</ref><sp/>=<sp/><ref refid="namespaceprotomsg_1a8e34e045d8c49d98e5522e76a20b943a" kindref="member">protomsg::TYPE_NORMAL_MSG</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;v_protomsg:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v_protomsg;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a7930ab296d19b6d7217ae1acf09229f3" kindref="member">terf</ref>==0<sp/>||<sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a04f17c6355d8722524757604afadae94" kindref="member">terl</ref><sp/>==<sp/>0<sp/>||<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8" kindref="member">guid</ref>)<sp/>==<sp/>0<sp/>||<sp/>strlen(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700" kindref="member">pid</ref>)<sp/>==<sp/>0<sp/>||<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9" kindref="member">aid</ref>)<sp/>==<sp/>0<sp/>||<sp/>strlen(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172" kindref="member">cabx</ref>)<sp/>==<sp/>0<sp/>||<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgout.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classthread__pair_1a542da55488a6cb54517473429d234801" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a542da55488a6cb54517473429d234801" kindref="member">thread_pair::reader_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_thp)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;socket_data_t&gt;<sp/>lsdt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readpipe=<ref refid="classthread__pair_1a6c14f207dab415ad3c4bb8cad8e226f1" kindref="member">get_read_pipe</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reader_thread<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx_thp;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28" kindref="member">_sharedptr_keep_running</ref>-&gt;_keep_accepting.load())<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_set<sp/>readset;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfds,<sp/>ret_sel;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lck(_shpt_sigsyn-&gt;_cv_mutex);</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>shpt_keep_running<sp/>=<sp/>_sharedptr_keep_running;</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>wait<sp/>for<sp/>up<sp/>to<sp/>10<sp/>seconds</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_sigsyn-&gt;_cv.wait_for(lck,<sp/>std::chrono::seconds(10),</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;shpt_keep_running]()<sp/>{<sp/>return<sp/>!shpt_keep_running-&gt;_keep_accepting.load();<sp/>});</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sleep(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>1<sp/>-<sp/>Getting<sp/>all<sp/>sockets<sp/>descriptors<sp/>to<sp/>SELECT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512" kindref="member">get_sockdata_list</ref>(lsdt);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ZERO(&amp;readset);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfds<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(readpipe,<sp/>&amp;readset);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfds<sp/>=<sp/>(readpipe&lt;nfds)<sp/>?<sp/>nfds<sp/>:<sp/>(readpipe+1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=lsdt.begin();<sp/>it<sp/>!=<sp/>lsdt.end();<sp/>it++)<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(it-&gt;sd,<sp/>&amp;readset);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfds<sp/>=<sp/>(it-&gt;sd<sp/>&lt;<sp/>nfds)<sp/>?<sp/>nfds<sp/>:<sp/>(it-&gt;sd+1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Accepting<sp/>ndfs=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nfds<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>connections.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(readset);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ret_sel=select(nfds,<sp/>&amp;readset,<sp/>NULL,<sp/>NULL,<sp/>NULL))<sp/>&lt;<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>someerror=errno;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>FAILED:<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ret_sel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(someerror);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>someerror<sp/>==<sp/>EINTR<sp/>)<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>FD_ISSET(readpipe,<sp/>&amp;readset)<sp/>)<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read(readpipe,<ref refid="namespaceprotopipe_1acdb2afef76b82453234a043e76cbf2a9" kindref="member">protopipe::GETPIPEMSG</ref>,<ref refid="namespaceprotopipe_1acdd465b67009b36a3c852eaf3a96d760" kindref="member">protopipe::LEN_PIPEMSG</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceprotopipe_1acdb2afef76b82453234a043e76cbf2a9" kindref="member">protopipe::GETPIPEMSG</ref>[0]==<ref refid="namespaceprotopipe_1a51046f23aed03692e33538e1dc59d0de" kindref="member">protopipe::ENDING_PIPE</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ENDING_PIPE<sp/>received.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>REMOVE.<sp/>Maybe<sp/>it<sp/>needs<sp/>to<sp/>finish<sp/>all<sp/>messages.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WEAKUP_PIPE<sp/>received.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it=lsdt.begin();<sp/>it<sp/>!=<sp/>lsdt.end();<sp/>it++)<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref>-&gt;check_obsolete(it-&gt;idx_con,<sp/>*<ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref>)<sp/>!=<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Obsolete<sp/>or<sp/>some<sp/>issues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SD<sp/>obsolete<sp/>(deleted):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;sd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IP:Port:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(it-&gt;sockaddr.sin_addr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ntohs(it-&gt;sockaddr.sin_port);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" kindref="member">remove_sockdata</ref>(*it);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(it-&gt;sd);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FD_ISSET(it-&gt;sd,<sp/>&amp;readset)<sp/>)<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>message<sp/>from<sp/>socket...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6" kindref="member">Attending_Read_Socket</ref>(*it);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_sigmask(SIG_SETMASK,<sp/>&amp;_shpt_sigsyn-&gt;_sigset_old,<sp/>nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ending<sp/>reader_thread<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx_thp;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623" kindref="member">thread_pair::Prepare_Msg_Json_To_Send</ref>(<ref refid="structprotomsg_1_1st__protomsg" kindref="compound">protomsg::st_protomsg</ref><sp/>&amp;v_protomsg,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg,<sp/>Json::Value<sp/>&amp;json_msg)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;TERF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a7930ab296d19b6d7217ae1acf09229f3" kindref="member">terf</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;TERL&quot;</highlight><highlight class="normal">]<sp/>=<sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a04f17c6355d8722524757604afadae94" kindref="member">terl</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;GUID&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::string(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8" kindref="member">guid</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;PID&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::string(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700" kindref="member">pid</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;AID&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::string(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9" kindref="member">aid</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;CABX&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::string(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172" kindref="member">cabx</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>json_msg[</highlight><highlight class="stringliteral">&quot;MSG&quot;</highlight><highlight class="normal">]<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classthread__pair_1a6ebef75114e800552bdd19598f0964ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a6ebef75114e800552bdd19598f0964ad" kindref="member">thread_pair::writer_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_thp)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msg,<sp/>msgout;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>json_msg;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprotomsg_1_1st__protomsg" kindref="compound">protomsg::st_protomsg</ref><sp/>v_protomsg;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structconnection" kindref="compound">connection</ref><sp/>cur_conn;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSocket" kindref="compound">Socket</ref><sp/>send_sock;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;writer_thread<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx_thp;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28" kindref="member">_sharedptr_keep_running</ref>-&gt;_keep_working.load())<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lck(_shpt_sigsyn-&gt;_cv_mutex);</highlight></codeline>
<codeline lineno="237"><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>shpt_keep_running<sp/>=<sp/>_sharedptr_keep_running;</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>wait<sp/>for<sp/>up<sp/>to<sp/>10<sp/>seconds</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_sigsyn-&gt;_cv.wait_for(lck,<sp/>std::chrono::seconds(10),</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;shpt_keep_running]()<sp/>{<sp/>return<sp/>!shpt_keep_running-&gt;_keep_working.load();<sp/>});</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sleep(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>1<sp/>-<sp/>ReadFromQueue<sp/><sp/>(idx_con<sp/>on<sp/>message)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093" kindref="member">_write_queue</ref>.<ref refid="classMessageQueue_1ae4afb1b560697ce2a0bd8a0b5bca8f21" kindref="member">rcv</ref>(&amp;v_protomsg,<sp/>msg);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a4da8e282dba03c825108806b9ecbc3e5" kindref="member">mtype</ref><sp/>==<sp/><ref refid="namespaceprotomsg_1a170738b21ae44465185c95dc94c4a317" kindref="member">protomsg::TYPE_ENDING_MSG</ref>)<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>protomsg::TYPE_ENDING_MSG&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623" kindref="member">Prepare_Msg_Json_To_Send</ref>(v_protomsg,<sp/>msg,<sp/>json_msg);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a64e6bf076b36b0abd2040545469c13c0" kindref="member">_p_cur_connections</ref>-&gt;ending_operation(v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1ad687a9308b0ea081d445fbaac12c29b7" kindref="member">idx</ref>,<sp/>*<ref refid="classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb" kindref="member">_shpt_semIPCfile</ref>,<sp/>cur_conn);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>2<sp/>-<sp/>Send<sp/>msg<sp/>to<sp/>socket<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_sock.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref><sp/>=<sp/>cur_conn.<ref refid="structconnection_1aaf5e92500e5f396f4e1e1b70b01168a1" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>json_msg;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(ss,<sp/>field))<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgout<sp/>+=<sp/>field;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>msgout:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msgout;<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_sock.<ref refid="classSocket_1a564eb3f48d8cb31423076e68f8cc1f54" kindref="member">socket_write</ref>(msgout);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgout.clear();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pthread_sigmask(SIG_SETMASK,<sp/>&amp;_shpt_sigsyn-&gt;_sigset_old,<sp/>nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ending<sp/>writer_thread<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx_thp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classthread__pair_1a5059ef6b79e75c8f15aca5785c8ca15c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a5059ef6b79e75c8f15aca5785c8ca15c" kindref="member">thread_pair::add_sockdata</ref>(<ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>sdt)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>l_guard{<ref refid="classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19" kindref="member">_accept_mutex</ref>};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>.emplace_back(sdt);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;add_sockdata<sp/>OK!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092" kindref="member">thread_pair::remove_sockdata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>&amp;sdt)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>l_guard{<ref refid="classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19" kindref="member">_accept_mutex</ref>};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;socket_data_t&gt;::iterator<sp/>findIter<sp/>=<sp/>std::find(<ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>.begin(),<sp/><ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>.end(),<sp/>sdt);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(findIter<sp/>==<sp/><ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;remove_sockdata<sp/>NOT<sp/>FOUND!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>item<sp/>=<sp/>*findIter;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>.remove(item);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;remove_sockdata<sp/>OK!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sdt.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512" kindref="member">thread_pair::get_sockdata_list</ref>(list&lt;socket_data_t&gt;<sp/>&amp;lsdt)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>l_guard{<ref refid="classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19" kindref="member">_accept_mutex</ref>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>lsdt<sp/>=<sp/><ref refid="classthread__pair_1a7371d66499abbff03183171892687428" kindref="member">_sockdata</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;get_sockdata_list<sp/>OK!!<sp/>lsdt.size()=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lsdt.size();<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/thread_pair.cpp"/>
  </compounddef>
</doxygen>
