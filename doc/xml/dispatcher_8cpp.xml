<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="dispatcher_8cpp" kind="file" language="C++">
    <compoundname>dispatcher.cpp</compoundname>
    <includes refid="dispatcher_8h" local="yes">dispatcher.h</includes>
    <incdepgraph>
      <node id="22">
        <label>Socket.h</label>
        <link refid="Socket_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>checker_pids.h</label>
        <link refid="checker__pids_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>connections.h</label>
        <link refid="connections_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>dispatch_cfg.h</label>
        <link refid="dispatch__cfg_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/dispatcher.cpp</label>
        <link refid="dispatcher_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dispatcher.h</label>
        <link refid="dispatcher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>getcfgfile.h</label>
        <link refid="getcfgfile_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ipclib.h</label>
        <link refid="ipclib_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>protocol_msg.h</label>
        <link refid="protocol__msg_8h"/>
      </node>
      <node id="45">
        <label>thread_pair.h</label>
        <link refid="thread__pair_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>arpa/inet.h</label>
      </node>
      <node id="21">
        <label>atomic</label>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="46">
        <label>condition_variable</label>
      </node>
      <node id="32">
        <label>errno.h</label>
      </node>
      <node id="28">
        <label>fcntl.h</label>
      </node>
      <node id="44">
        <label>fstream</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="48">
        <label>future</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>json/json.h</label>
      </node>
      <node id="6">
        <label>json/value.h</label>
      </node>
      <node id="49">
        <label>list</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="47">
        <label>mutex</label>
      </node>
      <node id="29">
        <label>netdb.h</label>
      </node>
      <node id="4">
        <label>netinet/in.h</label>
      </node>
      <node id="10">
        <label>plog/Log.h</label>
      </node>
      <node id="43">
        <label>pwd.h</label>
      </node>
      <node id="14">
        <label>signal.h</label>
      </node>
      <node id="36">
        <label>stdio.h</label>
      </node>
      <node id="23">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="24">
        <label>string.h</label>
      </node>
      <node id="27">
        <label>sys/ioctl.h</label>
      </node>
      <node id="38">
        <label>sys/ipc.h</label>
      </node>
      <node id="40">
        <label>sys/msg.h</label>
      </node>
      <node id="41">
        <label>sys/sem.h</label>
      </node>
      <node id="39">
        <label>sys/shm.h</label>
      </node>
      <node id="3">
        <label>sys/socket.h</label>
      </node>
      <node id="37">
        <label>sys/stat.h</label>
      </node>
      <node id="26">
        <label>sys/types.h</label>
      </node>
      <node id="31">
        <label>sys/un.h</label>
      </node>
      <node id="15">
        <label>sys/wait.h</label>
      </node>
      <node id="17">
        <label>thread</label>
      </node>
      <node id="25">
        <label>unistd.h</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dispatcher_8h" kindref="compound">dispatcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classDispatcher_1a1187bc4bfb0db5b107b9d480364abb78" refkind="member"><highlight class="normal"><ref refid="classDispatcher_1a81afc8d131f2724e92e6ca1d68aae6ae" kindref="member">Dispatcher::Dispatcher</ref>(<ref refid="structdispatch__cfg" kindref="compound">dispatch_cfg</ref><sp/>cfg,<sp/>std::shared_ptr&lt;keep_running_flags&gt;<sp/>shpt_keep_running)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:_config{cfg},</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running{shpt_keep_running}</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CTOR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">void<sp/>Dispatcher::Show_All_Shared_Ptr()</highlight></codeline>
<codeline lineno="11"><highlight class="comment">{</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;Address:<sp/>&quot;<sp/>&lt;&lt;<sp/>this;</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;keep_running_flags&gt;:&quot;<sp/>&lt;&lt;<sp/>_sharedptr_keep_running.use_count();</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;Semaphore&gt;:&quot;<sp/>&lt;&lt;<sp/>_shpt_semIPCfile.use_count();</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;SharedMemory&gt;:&quot;<sp/>&lt;&lt;<sp/>_shpt_shmIPCfile.use_count();</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;connections&gt;:&quot;<sp/>&lt;&lt;<sp/>_p_cur_connections.use_count();</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;MessageQueue&gt;:&quot;<sp/>&lt;&lt;<sp/>_shpt_Common_Msg_Queue.use_count();</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;SharedMemory&gt;:&quot;<sp/>&lt;&lt;<sp/>_shpt_shmAllowedIPs.use_count();</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;std::shared_ptr&lt;signal_synch&gt;:&quot;<sp/>&lt;&lt;<sp/>_shpt_sigsyn.use_count();</highlight></codeline>
<codeline lineno="20"><highlight class="comment">}</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classDispatcher_1a52fc4e8bef278fa415723b39b61c28a7" refkind="member"><highlight class="normal"><ref refid="classDispatcher_1a52fc4e8bef278fa415723b39b61c28a7" kindref="member">Dispatcher::~Dispatcher</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DTOR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classDispatcher_1a8847de325dbee771fb33ebebb978e40d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a8847de325dbee771fb33ebebb978e40d" kindref="member">Dispatcher::Launch_All_Threads</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>.reserve(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>.emplace_back(<ref refid="classDispatcher_1aae40315ea44ae1b054a663fbefae653d" kindref="member">_msg_queues</ref>[i],<sp/>*<ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>,<sp/>i+1,<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a030d89cc64de3ef18b775e563da891e1" kindref="member">_sharedptr_keep_running</ref>,<sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>,<sp/></highlight><highlight class="comment">//_shpt_sigsyn,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>Threads<sp/>launched!!<sp/>---------------------------&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classDispatcher_1ab58d2e0054dd8833324bc86095af82ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1ab58d2e0054dd8833324bc86095af82ba" kindref="member">Dispatcher::Prepare_Server_Socket</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//AF_INET<sp/>(Internet<sp/>mode)<sp/>SOCK_STREAM<sp/>(TCP<sp/>mode)<sp/>0<sp/>(Protocol<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref><sp/>=<sp/><ref refid="classSocket" kindref="compound">Socket</ref>(AF_INET,SOCK_STREAM,0);<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//You<sp/>can<sp/>reuse<sp/>the<sp/>address<sp/>and<sp/>the<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optVal<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1acac0892dfa60b7034b662060f640009a" kindref="member">socket_set_opt</ref>(SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;optVal);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bind<sp/>socket<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a4f142a9d6ffd312c72bc813797658a1b" kindref="member">bind</ref>(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a9dadf193b92388dc2fb585f13dbf7f6b" kindref="member">IP</ref>,<sp/>std::to_string(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1ad01f5f8ac72c8d3618d1e2104ea18290" kindref="member">Port</ref>));<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Start<sp/>listening<sp/>for<sp/>incoming<sp/>connections<sp/>(10<sp/>=&gt;<sp/>maximum<sp/>of<sp/>10<sp/>Connections<sp/>in<sp/>Queue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1af4b275979ee2f9b28bbc54c90daae2e9" kindref="member">listen</ref>(10);<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Discarted<sp/>by<sp/>the<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="59"><highlight class="comment">void<sp/>Dispatcher::Signal_Handler_For_Threads()</highlight></codeline>
<codeline lineno="60"><highlight class="comment">{</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>//_shpt_sigsyn<sp/>=<sp/>std::make_shared&lt;signal_synch&gt;();</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>sigemptyset(&amp;_shpt_sigsyn-&gt;_sigset_new);</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>sigaddset(&amp;_shpt_sigsyn-&gt;_sigset_new,<sp/>SIGINT);</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>sigaddset(&amp;_shpt_sigsyn-&gt;_sigset_new,<sp/>SIGUSR1);</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>sigaddset(&amp;_shpt_sigsyn-&gt;_sigset_new,<sp/>SIGTERM);</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_sigmask(SIG_BLOCK,<sp/>&amp;_shpt_sigsyn-&gt;_sigset_new,<sp/>&amp;_shpt_sigsyn-&gt;_sigset_old);</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>auto<sp/>signal_handler<sp/>=<sp/>[this]()<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>signum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>wait<sp/>until<sp/>a<sp/>signal<sp/>is<sp/>delivered:</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;LAMBDA<sp/>signal_handler&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigwait(&amp;_shpt_sigsyn-&gt;_sigset_new,<sp/>&amp;signum);</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running-&gt;_keep_accepting.store(false);</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running-&gt;_keep_working.store(false);</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;signal_handler<sp/>WEAK-UP<sp/>-<sp/>before<sp/>notify_all&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>notify<sp/>all<sp/>waiting<sp/>workers<sp/>to<sp/>check<sp/>their<sp/>predicate:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_sigmask(SIG_SETMASK,<sp/>&amp;_shpt_sigsyn-&gt;_sigset_old,<sp/>nullptr);</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_sigsyn-&gt;_cv.notify_all();</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>signum;</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>_shpt_sigsyn-&gt;_ft_signal_handler<sp/>=<sp/>std::async(std::launch::async,<sp/>signal_handler);</highlight></codeline>
<codeline lineno="85"><highlight class="comment">}</highlight></codeline>
<codeline lineno="86"><highlight class="comment">*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classDispatcher_1a802fc1e47691fdf18a24434256fe2680" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a802fc1e47691fdf18a24434256fe2680" kindref="member">Dispatcher::Accept_by_Select</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfound;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_set<sp/>readfds;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>FD_ZERO(&amp;readfds);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sock_sel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>FD_SET(<ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref>,<sp/>&amp;readfds);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>n_sock_sel=(n_sock_sel&gt;<ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref>)?<sp/>n_sock_sel<sp/>:<sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref>+1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((nfound<sp/>=<sp/>select(n_sock_sel,&amp;readfds,0,0,0))<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;select<sp/>failed!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET(<ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref>,&amp;readfds))<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>connection...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classDispatcher_1a8f47f787819c857ebd5870ce8f24a787" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a8f47f787819c857ebd5870ce8f24a787" kindref="member">Dispatcher::Accept_Thread</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>father<sp/>(checker_pids)<sp/>can<sp/>delete<sp/>IPCS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>-&gt;DisableDelete();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;DisableDelete();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>-&gt;DisableDelete();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref>-&gt;DisableDelete();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal_Handler_For_Threads();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a8847de325dbee771fb33ebebb978e40d" kindref="member">Launch_All_Threads</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ab58d2e0054dd8833324bc86095af82ba" kindref="member">Prepare_Server_Socket</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classDispatcher_1a030d89cc64de3ef18b775e563da891e1" kindref="member">_sharedptr_keep_running</ref>-&gt;_keep_accepting.load())<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classDispatcher_1a802fc1e47691fdf18a24434256fe2680" kindref="member">Accept_by_Select</ref>()==0)<sp/></highlight><highlight class="comment">//<sp/>timeout<sp/>or<sp/>signal<sp/>-&gt;<sp/>Check<sp/>_keep_accepting...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accept<sp/>the<sp/>incoming<sp/>connection<sp/>and<sp/>creates<sp/>a<sp/>new<sp/>Socket<sp/>to<sp/>the<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSocket" kindref="compound">Socket</ref><sp/>newSocket<sp/>=<sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a3f749d9a206e48a875e8c24f29500a93" kindref="member">accept</ref>();<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>IP<sp/>is<sp/>in<sp/>Table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>all<sp/>socket_data_t<sp/>info:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>sd_info;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd_info.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref><sp/>=<sp/>newSocket.<ref refid="classSocket_1a231ddf6e338a86640e26808b83efeaa1" kindref="member">sock</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sd_info.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>,<sp/>newSocket.<ref refid="classSocket_1a641d9c790350664e5e90dce7d78bd59a" kindref="member">address_info</ref>.ai_addr,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>sd:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sd_info.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IP:Port:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(sd_info.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_addr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ntohs(sd_info.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>.sin_port);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>possible<sp/>obsoletes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthread<sp/>=<sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>-&gt;clean_repeated_ip(&amp;sd_info.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>,<sp/>*<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>currently<sp/>exists,<sp/>remove<sp/>it.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nthread<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exists,<sp/>then<sp/>write<sp/>to<sp/>pipe<sp/>for<sp/>Reader<sp/>Thread<sp/>to<sp/>remove<sp/>it.&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>notification<sp/>to<sp/>pipe<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(<ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>[nthread].get_write_pipe(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceprotopipe_1a9f31fedef0879b851ea45cc25e5ede7e" kindref="member">protopipe::WEAKUP_PIPE</ref>),<sp/><ref refid="namespaceprotopipe_1acdd465b67009b36a3c852eaf3a96d760" kindref="member">protopipe::LEN_PIPEMSG</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>less<sp/>charged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>th_id<sp/>=<sp/><ref refid="classDispatcher_1a36ada166664995d1fca7676ebae0bacd" kindref="member">LessCharged</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LessCharged:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>th_id;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sd_info.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref><sp/>=<sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>-&gt;register_new_conn(th_id,<sp/>sd_info.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>,<sp/>sd_info.<ref refid="structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9" kindref="member">sockaddr</ref>,<sp/>*<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>possible<sp/>to<sp/>register_new_conn:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>th_id;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sd_info.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sd_info.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>-&gt;unregister_conn(sd_info.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref>,<sp/>*<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>sd<sp/>to<sp/>thread_pair...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classDispatcher_1a1bdce929609ef90ec793b33f004eb256" kindref="member">Assign_connection_to_thread_pair</ref>(th_id,<sp/>&amp;sd_info)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>possible<sp/>to<sp/>Assign_connection_to_thread_pair:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>th_id;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sd_info.<ref refid="structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f" kindref="member">sd</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sd_info.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>-&gt;unregister_conn(sd_info.<ref refid="structsocket__data__t_1aa252e34de3632643e5679b18654c4f04" kindref="member">idx_con</ref>,<sp/>*<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;End<sp/>while,<sp/>accepting<sp/>again.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ending<sp/>all<sp/>reader<sp/>and<sp/>writer<sp/>threads.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>signal<sp/>handler<sp/>to<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>signal<sp/>=<sp/>_shpt_sigsyn-&gt;_ft_signal_handler.get();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;ok<sp/><sp/><sp/>-<sp/>RECEIVED<sp/>SIGNAL<sp/>FROM<sp/>FUTURE<sp/>_ft_signal_handler:<sp/>&quot;<sp/>&lt;&lt;<sp/>signal<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>.<ref refid="classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ac4cda43fd65ddf8fda5ae010f4e460ef" kindref="member">Ending_all_threads</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classDispatcher_1ac4cda43fd65ddf8fda5ae010f4e460ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1ac4cda43fd65ddf8fda5ae010f4e460ef" kindref="member">Dispatcher::Ending_all_threads</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprotomsg_1_1st__protomsg" kindref="compound">protomsg::st_protomsg</ref><sp/>v_protomsg;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>st_end(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>v_protomsg.<ref refid="structprotomsg_1_1st__protomsg_1a4da8e282dba03c825108806b9ecbc3e5" kindref="member">mtype</ref><sp/>=<sp/><ref refid="namespaceprotomsg_1a170738b21ae44465185c95dc94c4a317" kindref="member">protomsg::TYPE_ENDING_MSG</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>1<sp/>-<sp/>No<sp/>accepting<sp/>more<sp/>connections<sp/>and<sp/>not<sp/>reading<sp/>more<sp/>input<sp/>messages<sp/>(AcceptThread<sp/>&amp;<sp/>Reader_Thread)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_keep_accepting<sp/>is<sp/>currently<sp/>FALSE<sp/>because<sp/>of<sp/>signal.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tp<sp/>:<sp/><ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>ENDING<sp/>to<sp/>pipe<sp/>-<sp/>for<sp/>Reader_Threads<sp/>to<sp/>weakup<sp/>and<sp/>die.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(tp.get_write_pipe(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceprotopipe_1a51046f23aed03692e33538e1dc59d0de" kindref="member">protopipe::ENDING_PIPE</ref>),<sp/><ref refid="namespaceprotopipe_1acdd465b67009b36a3c852eaf3a96d760" kindref="member">protopipe::LEN_PIPEMSG</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!<ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>-&gt;is_all_connections_done())<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>all<sp/>connections<sp/>to<sp/>receive<sp/>pending<sp/>operations...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>little<sp/>bit...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>Writer<sp/>Threads<sp/>will<sp/>be<sp/>done!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>little<sp/>bit...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a030d89cc64de3ef18b775e563da891e1" kindref="member">_sharedptr_keep_running</ref>-&gt;_keep_working.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tp<sp/>:<sp/><ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Semd<sp/>protomsg::TYPE_ENDING_MSG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp.get_write_queue().send(&amp;v_protomsg,st_end);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;tp<sp/>:<sp/><ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tp.th_r.joinable())</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp.th_r.join();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tp.th_w.joinable())</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp.th_w.join();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ending_all_threads<sp/>done!!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classDispatcher_1a1bdce929609ef90ec793b33f004eb256" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a1bdce929609ef90ec793b33f004eb256" kindref="member">Dispatcher::Assign_connection_to_thread_pair</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>th_id,<sp/><ref refid="structsocket__data__t" kindref="compound">socket_data_t</ref><sp/>*sd_info)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO<sp/>-<sp/>Check<sp/>result<sp/>or<sp/>exceptions...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>[th_id].add_sockdata(*sd_info)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>WEAKUP_PIPE<sp/>byte<sp/>to<sp/>notify<sp/>there<sp/>is<sp/>a<sp/>new<sp/>connection...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>write(<ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>[th_id].get_write_pipe(),<sp/>&amp;<ref refid="namespaceprotopipe_1a9f31fedef0879b851ea45cc25e5ede7e" kindref="member">protopipe::WEAKUP_PIPE</ref>,<sp/><ref refid="namespaceprotopipe_1acdd465b67009b36a3c852eaf3a96d760" kindref="member">protopipe::LEN_PIPEMSG</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classDispatcher_1a667b6987746aaff43e0c5635a9e5226a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a667b6987746aaff43e0c5635a9e5226a" kindref="member">Dispatcher::LaunchTuxCli</ref>()<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>prog(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a8ff3fc13dc9d67502e46fb3d4aa7e363" kindref="member">TuxCliProg</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ipcfile(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1ac0c0175bddd6441f5551abcd70657b5c" kindref="member">IpcFile</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>setup(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a6ecd4aaeefe55774ef864df10d9485d1" kindref="member">TuxCliSetup</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Launching:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prog;<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>with:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ipcfile;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>with:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setup;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>execl(prog.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;Fork_TuxCli&quot;</highlight><highlight class="normal"><sp/>,<sp/>ipcfile.c_str(),<sp/>setup.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>execl:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classDispatcher_1a36ada166664995d1fca7676ebae0bacd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1a36ada166664995d1fca7676ebae0bacd" kindref="member">Dispatcher::LessCharged</ref>()</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>less_charged;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_th<sp/>=<sp/>std::min_element(<ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>.begin(),<ref refid="classDispatcher_1a023871cf97965bcfe33681aec45c0278" kindref="member">_v_thread_pair</ref>.end(),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="classthread__pair" kindref="compound">thread_pair</ref><sp/>&amp;a,<sp/><ref refid="classthread__pair" kindref="compound">thread_pair</ref><sp/>&amp;b){<sp/>return<sp/>a.get_size_of_sock_list()<sp/>&lt;<sp/>b.get_size_of_sock_list();}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_th-&gt;get_idx();</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classDispatcher_1a6f44162db1b99e05c1a6a0c892610c40" refkind="member"><highlight class="normal">Dispatcher::operator<sp/>bool()</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classDispatcher_1af6b72f91b36ed0dcee31684992b725a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1af6b72f91b36ed0dcee31684992b725a6" kindref="member">Dispatcher::IPC_Setting_Up</ref>()</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>ipcs_json;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shm_conn_id=-1,<sp/>sem_conn_id=-1,<sp/>msg_common_id=-1,<sp/>shm_ips_id=-1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGetCfgFile" kindref="compound">GetCfgFile</ref><sp/>ipcfile(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1ac0c0175bddd6441f5551abcd70657b5c" kindref="member">IpcFile</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ipcfile)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipcs_json<sp/>=<sp/>ipcfile.<ref refid="classGetCfgFile_1ada73da323a67df88e661ffe0dc7420d7" kindref="member">get_json</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_conn_id<sp/>=<sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;sem_conn_id&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shm_conn_id<sp/>=<sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;shm_conn_id&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_common_id<sp/>=<sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;msg_common_id&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shm_ips_id<sp/>=<sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;shm_ips_id&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>get<sp/>all<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSemaphore" kindref="compound">Semaphore</ref><sp/>sem(sem_conn_id);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Semaphore<sp/>created<sp/>previously<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sem_conn_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>and<sp/>it<sp/>is<sp/>running<sp/>now.<sp/>File:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ipcfile.<ref refid="classGetCfgFile_1aeb520cbfe46cd228acf9bd931b0724ca" kindref="member">get_file_name</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref><sp/>shm(shm_conn_id);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shm)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SharedMemory<sp/>created<sp/>previously<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>shm_conn_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>and<sp/>it<sp/>is<sp/>running<sp/>now.<sp/>File:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ipcfile.<ref refid="classGetCfgFile_1aeb520cbfe46cd228acf9bd931b0724ca" kindref="member">get_file_name</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMessageQueue" kindref="compound">MessageQueue</ref><sp/>msg(msg_common_id);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msg)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MessageQueue<sp/>created<sp/>previously<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg_common_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>and<sp/>it<sp/>is<sp/>running<sp/>now.<sp/>File:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ipcfile.<ref refid="classGetCfgFile_1aeb520cbfe46cd228acf9bd931b0724ca" kindref="member">get_file_name</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSharedMemory" kindref="compound">SharedMemory</ref><sp/>shmip(shm_ips_id);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shmip)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SharedMemory<sp/>created<sp/>previously<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>shm_ips_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>and<sp/>it<sp/>is<sp/>running<sp/>now.<sp/>File:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ipcfile.<ref refid="classGetCfgFile_1aeb520cbfe46cd228acf9bd931b0724ca" kindref="member">get_file_name</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ipcfile<sp/>obsolete,<sp/>values<sp/>(shm_conn_id,sem_conn_id):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>shm_ips_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sem_conn_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>0<sp/>(creating).<sp/>shm_conn_id,sem_conn_id,msg_common_id,shm_ips_id:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shm_conn_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sem_conn_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg_common_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>shm_ips_id;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref><sp/>=<sp/>std::make_shared&lt;Semaphore&gt;(IPC_PRIVATE,<sp/>1,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!*<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Semaphore<sp/>not<sp/>created&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;Lock();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Creating<sp/>Shared<sp/>Memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shm_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classconnections" kindref="compound">connections</ref>)+(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structconnection" kindref="compound">connection</ref>)*<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1ade44a34e9695f92820ab1d28bb04d695" kindref="member">MaxConnections</ref>)+(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref><sp/>=<sp/>std::make_shared&lt;SharedMemory&gt;(IPC_PRIVATE,shm_len,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!*<ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>)<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;Unlock();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SharedMemory<sp/>not<sp/>created&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PLACEMENT<sp/>NEW<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SHARED<sp/>POINTER<sp/>POINTING<sp/>TO<sp/>SHARED<sp/>MEMORY:<sp/>DELETER<sp/>NEEDED:<sp/>calls<sp/>constructor<sp/>and<sp/>deleter<sp/>on<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;connections&gt;<sp/>p_conn(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>-&gt;getaddr())<sp/><ref refid="classconnections" kindref="compound">connections</ref>(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1ade44a34e9695f92820ab1d28bb04d695" kindref="member">MaxConnections</ref>,<sp/><ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>),<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="classconnections" kindref="compound">connections</ref><sp/>*p){<sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connections<sp/>own<sp/>deleter:<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref><sp/>=<sp/>p_conn;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;Unlock();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>2<sp/>-<sp/>Common<sp/>message<sp/>queue<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref><sp/>=<sp/>std::make_shared&lt;MessageQueue&gt;(IPC_PRIVATE,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!*<ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>3<sp/>-<sp/>Allowed<sp/>IP&apos;s<sp/>-<sp/>TO<sp/>DO<sp/>a<sp/>better<sp/>implementation<sp/>(2<sp/>IP&apos;s<sp/>by<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>shm_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structallowed__ips" kindref="compound">allowed_ips</ref>)*2;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref><sp/>=<sp/>std::make_shared&lt;SharedMemory&gt;(IPC_PRIVATE,shm_len,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structallowed__ips" kindref="compound">allowed_ips</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref>-&gt;getaddr());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[0].<ref refid="structallowed__ips_1a52a2adb3f9b2453095119df134014c6d" kindref="member">allowed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[0].<ref refid="structallowed__ips_1a6bf24aea2a2a3024273ce87e694b5083" kindref="member">trace</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>inet_aton(</highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">,<sp/>&amp;(<ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[0].ip));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[1].<ref refid="structallowed__ips_1a52a2adb3f9b2453095119df134014c6d" kindref="member">allowed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[1].<ref refid="structallowed__ips_1a6bf24aea2a2a3024273ce87e694b5083" kindref="member">trace</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>inet_aton(</highlight><highlight class="stringliteral">&quot;127.0.1.1&quot;</highlight><highlight class="normal">,<sp/>&amp;(<ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>[1].ip));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>write<sp/>queues<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aae40315ea44ae1b054a663fbefae653d" kindref="member">_msg_queues</ref>.reserve(<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aae40315ea44ae1b054a663fbefae653d" kindref="member">_msg_queues</ref>.emplace_back(IPC_PRIVATE,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SAVE<sp/>ON<sp/>IPC<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;shm_conn_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>-&gt;getid();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;sem_conn_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;getid();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;msg_common_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>-&gt;getid();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>ipcs_json[</highlight><highlight class="stringliteral">&quot;shm_ips_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref>-&gt;getid();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ipcfile.<ref refid="classGetCfgFile_1a9ec1ad40b7b82dc8c37532bdbbf3b7c1" kindref="member">save_cfg_file</ref>(ipcs_json);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor<sp/>de<sp/>copia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classDispatcher_1a709f96ac930db22f806fb3fe62e46f48" refkind="member"><highlight class="normal"><ref refid="classDispatcher_1a81afc8d131f2724e92e6ca1d68aae6ae" kindref="member">Dispatcher::Dispatcher</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;<sp/>other)<sp/>:<sp/></highlight><highlight class="comment">//<sp/>_v_thread_pair(other._v_thread_pair),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running(other._sharedptr_keep_running),</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_semIPCfile(other._shpt_semIPCfile),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmIPCfile(other._shpt_shmIPCfile),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_config(other._config),</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_server_socket(other._server_socket),</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_p_cur_connections(other._p_cur_connections),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_Common_Msg_Queue(other._shpt_Common_Msg_Queue),</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmAllowedIPs(other._shpt_shmAllowedIPs),</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allowed_ips(other._allowed_ips)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_shpt_sigsyn(other._shpt_sigsyn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Copy<sp/>Ctor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor<sp/>de<sp/>movimiento</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classDispatcher_1a6041513c142a813ff651df3040b642c2" refkind="member"><highlight class="normal"><ref refid="classDispatcher_1a81afc8d131f2724e92e6ca1d68aae6ae" kindref="member">Dispatcher::Dispatcher</ref>(<ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/></highlight><highlight class="comment">//_v_thread_pair(std::move(other._v_thread_pair)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running(std::move(other._sharedptr_keep_running)),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_semIPCfile(std::move(other._shpt_semIPCfile)),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmIPCfile(std::move(other._shpt_shmIPCfile)),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_config(std::move(other._config)),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_server_socket(std::move(other._server_socket)),</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_p_cur_connections(std::move(other._p_cur_connections)),</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_Common_Msg_Queue(std::move(other._shpt_Common_Msg_Queue)),</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmAllowedIPs(std::move(other._shpt_shmAllowedIPs)),</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allowed_ips(std::move(other._allowed_ips))</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_shpt_sigsyn(std::move(other._shpt_sigsyn))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Move<sp/>Ctor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operador<sp/>de<sp/>asignación<sp/>por<sp/>copia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="classDispatcher_1a81c3a5eace0c1f1994a3ec6c6f2c3489" refkind="member"><highlight class="normal"><ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;<sp/><ref refid="classDispatcher_1a81c3a5eace0c1f1994a3ec6c6f2c3489" kindref="member">Dispatcher::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Assignment<sp/>Operator:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_v_thread_pair<sp/>=<sp/>other._v_thread_pair;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a030d89cc64de3ef18b775e563da891e1" kindref="member">_sharedptr_keep_running</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a030d89cc64de3ef18b775e563da891e1" kindref="member">_sharedptr_keep_running</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a9d048f400c300c407c5a62c3b4197996" kindref="member">_server_socket</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a4ef272a9b4eb41f62c6f28e6f790b7e8" kindref="member">_p_cur_connections</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref><sp/>=<sp/>other.<ref refid="classDispatcher_1aa86de669ffc45c71db171db702c2c939" kindref="member">_allowed_ips</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_shpt_sigsyn<sp/>=<sp/>other._shpt_sigsyn;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operador<sp/>de<sp/>asignación<sp/>por<sp/>movimiento</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classDispatcher_1a4258058af8ad9945cc22383fbfbcf601" refkind="member"><highlight class="normal"><ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;<sp/><ref refid="classDispatcher_1a81c3a5eace0c1f1994a3ec6c6f2c3489" kindref="member">Dispatcher::operator=</ref>(<ref refid="classDispatcher" kindref="compound">Dispatcher</ref>&amp;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Movement<sp/>Assignment<sp/>Operator:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_v_thread_pair<sp/>=<sp/>std::move(other._v_thread_pair);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sharedptr_keep_running<sp/>=<sp/>std::move(other._sharedptr_keep_running);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_semIPCfile<sp/>=<sp/>std::move(other._shpt_semIPCfile);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmIPCfile<sp/>=<sp/>std::move(other._shpt_shmIPCfile);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_config<sp/>=<sp/>std::move(other._config);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_server_socket<sp/>=<sp/>std::move(other._server_socket);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_p_cur_connections<sp/>=<sp/>std::move(other._p_cur_connections);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_Common_Msg_Queue<sp/>=<sp/>std::move(other._shpt_Common_Msg_Queue);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shpt_shmAllowedIPs<sp/>=<sp/>std::move(other._shpt_shmAllowedIPs);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allowed_ips<sp/>=<sp/>std::move(other._allowed_ips);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_shpt_sigsyn<sp/>=<sp/>std::move(other._shpt_sigsyn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="classDispatcher_1ac0191211316636f5e5dea1d6ee5a80ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classDispatcher_1ac0191211316636f5e5dea1d6ee5a80ae" kindref="member">Dispatcher::operator()</ref>()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dispatcher<sp/>Operator<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1af00aa0bde4e49f79df9e386b840482f9" kindref="member">NumDispatch</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>1<sp/>-<sp/>Create<sp/>all<sp/>IPCs<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classDispatcher_1af6b72f91b36ed0dcee31684992b725a6" kindref="member">IPC_Setting_Up</ref>()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>2<sp/>-<sp/>LaunchTuxCli<sp/>and<sp/>Accept_Thread...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchecker__pids" kindref="compound">checker_pids</ref><sp/><ref refid="tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0" kindref="member">chk_procs</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0" kindref="member">chk_procs</ref>.<ref refid="classchecker__pids_1a27c1ae8def4db8f6cb36917f61048e6d" kindref="member">add</ref>(std::bind(&amp;<ref refid="classDispatcher_1a667b6987746aaff43e0c5635a9e5226a" kindref="member">Dispatcher::LaunchTuxCli</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&quot;LaunchTuxCli&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0" kindref="member">chk_procs</ref>.<ref refid="classchecker__pids_1a27c1ae8def4db8f6cb36917f61048e6d" kindref="member">add</ref>(std::bind(&amp;<ref refid="classDispatcher_1a8f47f787819c857ebd5870ce8f24a787" kindref="member">Dispatcher::Accept_Thread</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&quot;Accept_Thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attached<sp/>to<sp/>Connections:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>-&gt;get_nattach();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Launching<sp/>all<sp/>processes...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=<ref refid="tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0" kindref="member">chk_procs</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="comment">//<sp/>forker<sp/>=<sp/>1<sp/>--&gt;<sp/>delete<sp/>all<sp/>resources...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EnableDelete<sp/>all&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a01fe79a912713358c99828dd8ae33eb4" kindref="member">_shpt_shmIPCfile</ref>-&gt;EnableDelete();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aa5cca577db5505a89119c00b931fffa5" kindref="member">_shpt_semIPCfile</ref>-&gt;EnableDelete();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1a617169aea8a4c5caec50400a86401466" kindref="member">_shpt_Common_Msg_Queue</ref>-&gt;EnableDelete();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1ac81547d0bc6aa870455e218ae8bb58e8" kindref="member">_shpt_shmAllowedIPs</ref>-&gt;EnableDelete();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG_IF(<ref refid="client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d" kindref="member">loglevel</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EnableDelete<sp/>all<sp/>queues:<sp/>&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="classDispatcher_1a16272dd720e97587260cd1d85b8d9cd8" kindref="member">_config</ref>.<ref refid="structdispatch__cfg_1a2268a74e9fce19a10b0f81808375a6c6" kindref="member">NumThreads</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispatcher_1aae40315ea44ae1b054a663fbefae653d" kindref="member">_msg_queues</ref>[i].EnableDelete();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>delete<sp/>all.<sp/>Keep<sp/>all.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ending<sp/>operator()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/dispatcher.cpp"/>
  </compounddef>
</doxygen>
