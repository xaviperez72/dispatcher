<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classchecker__pids" kind="class" language="C++" prot="public" final="yes">
    <compoundname>checker_pids</compoundname>
    <includes refid="checker__pids_8h" local="no">checker_pids.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchecker__pids_1aeaf6d7cdb81c03a5d152f5122cb485e9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structchecker__struct" kindref="compound">checker_struct</ref> &gt;</type>
        <definition>std::vector&lt;checker_struct&gt; checker_pids::_pids</definition>
        <argsstring></argsstring>
        <name>_pids</name>
        <qualifiedname>checker_pids::_pids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="47" column="17" bodyfile="src/checker_pids.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1a8ba295ce04686629f2e545eef082688a" prot="private" static="no" mutable="no">
        <type><ref refid="structchecker__struct" kindref="compound">checker_struct</ref></type>
        <definition>checker_struct checker_pids::_dead</definition>
        <argsstring></argsstring>
        <name>_dead</name>
        <qualifiedname>checker_pids::_dead</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="48" column="20" bodyfile="src/checker_pids.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1a12fce3aed3117c10f47eaddf28fcdba8" prot="private" static="no" mutable="no">
        <type>sighandler_t</type>
        <definition>sighandler_t checker_pids::_previousInterruptHandler_int</definition>
        <argsstring></argsstring>
        <name>_previousInterruptHandler_int</name>
        <qualifiedname>checker_pids::_previousInterruptHandler_int</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="54" column="18" bodyfile="src/checker_pids.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1a19aa5267dd935b87eed2fb7b2192e3de" prot="private" static="no" mutable="no">
        <type>sighandler_t</type>
        <definition>sighandler_t checker_pids::_previousInterruptHandler_usr1</definition>
        <argsstring></argsstring>
        <name>_previousInterruptHandler_usr1</name>
        <qualifiedname>checker_pids::_previousInterruptHandler_usr1</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="55" column="18" bodyfile="src/checker_pids.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1a7aaab276668326d002cdd1f4e333c5b7" prot="private" static="no" mutable="no">
        <type>sighandler_t</type>
        <definition>sighandler_t checker_pids::_previousInterruptHandler_term</definition>
        <argsstring></argsstring>
        <name>_previousInterruptHandler_term</name>
        <qualifiedname>checker_pids::_previousInterruptHandler_term</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="56" column="18" bodyfile="src/checker_pids.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classchecker__pids_1ad738c2a7f7747a492d61a45d94a1ab51" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structkeep__running__flags" kindref="compound">keep_running_flags</ref> &gt;</type>
        <definition>std::shared_ptr&lt; keep_running_flags &gt; checker_pids::_p_run</definition>
        <argsstring></argsstring>
        <name>_p_run</name>
        <qualifiedname>checker_pids::_p_run</qualifiedname>
        <initializer>= std::make_shared&lt;<ref refid="structkeep__running__flags" kindref="compound">keep_running_flags</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="50" column="28" bodyfile="src/checker_pids.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1a065564a41603626bb7d1258c0cb075c3" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool checker_pids::_forker</definition>
        <argsstring></argsstring>
        <name>_forker</name>
        <qualifiedname>checker_pids::_forker</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="51" column="17" bodyfile="src/checker_pids.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchecker__pids_1acd2982254315ed5976aee9f33001baee" prot="private" static="yes" mutable="no">
        <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> *</type>
        <definition>checker_pids * checker_pids::_me</definition>
        <argsstring></argsstring>
        <name>_me</name>
        <qualifiedname>checker_pids::_me</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="52" column="25" bodyfile="src/checker_pids.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classchecker__pids_1a8670706ea3c75c45b7a9e43a99bf5a4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checker_pids::sigterm_func</definition>
        <argsstring>(int s)</argsstring>
        <name>sigterm_func</name>
        <qualifiedname>checker_pids::sigterm_func</qualifiedname>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="61" column="17" bodyfile="src/checker_pids.cpp" bodystart="120" bodyend="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchecker__pids_1ab2bffb76c0da98777ad2109be0b127ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>checker_pids::checker_pids</definition>
        <argsstring>()=default</argsstring>
        <name>checker_pids</name>
        <qualifiedname>checker_pids::checker_pids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="63" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1ad481c24cbe8f60fa780cf8f807188a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>checker_pids::checker_pids</definition>
        <argsstring>(checker_pids const &amp;)=delete</argsstring>
        <name>checker_pids</name>
        <qualifiedname>checker_pids::checker_pids</qualifiedname>
        <param>
          <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a10b144de7e14bc5cc1934f8f33143397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>checker_pids::checker_pids</definition>
        <argsstring>(checker_pids &amp;&amp;)=delete</argsstring>
        <name>checker_pids</name>
        <qualifiedname>checker_pids::checker_pids</qualifiedname>
        <param>
          <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1aa17a1b4c4b9b182fff3d78215488b1e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> &amp;</type>
        <definition>checker_pids &amp; checker_pids::operator=</definition>
        <argsstring>(checker_pids const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>checker_pids::operator=</qualifiedname>
        <param>
          <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="66" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a1e22231fb040beab1861fa5b14a864b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> &amp;</type>
        <definition>checker_pids &amp; checker_pids::operator=</definition>
        <argsstring>(checker_pids &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>checker_pids::operator=</qualifiedname>
        <param>
          <type><ref refid="classchecker__pids" kindref="compound">checker_pids</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="67" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a6318efeaea01e0e716dbd9931bf9c171" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>checker_pids::~checker_pids</definition>
        <argsstring>()</argsstring>
        <name>~checker_pids</name>
        <qualifiedname>checker_pids::~checker_pids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="69" column="5" bodyfile="src/checker_pids.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a27c1ae8def4db8f6cb36917f61048e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checker_pids::add</definition>
        <argsstring>(std::function&lt; int()&gt; _call, std::string procname)</argsstring>
        <name>add</name>
        <qualifiedname>checker_pids::add</qualifiedname>
        <param>
          <type>std::function&lt; int()&gt;</type>
          <declname>_call</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>procname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="72" column="10" bodyfile="src/checker_pids.cpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a8065fcd19912ad3e9b5affeaf3232ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checker_pids::StoppingChildren</definition>
        <argsstring>()</argsstring>
        <name>StoppingChildren</name>
        <qualifiedname>checker_pids::StoppingChildren</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="78" column="10" bodyfile="src/checker_pids.cpp" bodystart="7" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1a418d36e7f2d0ddff6b5b74c5a89f5540" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structkeep__running__flags" kindref="compound">keep_running_flags</ref> &gt;</type>
        <definition>std::shared_ptr&lt; keep_running_flags &gt; checker_pids::get_run_flags</definition>
        <argsstring>() const</argsstring>
        <name>get_run_flags</name>
        <qualifiedname>checker_pids::get_run_flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="81" column="21" bodyfile="src/checker_pids.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classchecker__pids_1afe18e52b8c0557fe2d791d4246d7b940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int checker_pids::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <qualifiedname>checker_pids::operator()</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker_pids.h" line="84" column="9" bodyfile="src/checker_pids.cpp" bodystart="16" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Creates processes (fork) and keep them alive until signal is captured. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>checker_pids</label>
        <link refid="classchecker__pids"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_dead</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>_me</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>checker_struct</label>
        <link refid="structchecker__struct"/>
      </node>
    </collaborationgraph>
    <location file="src/checker_pids.h" line="46" column="1" bodyfile="src/checker_pids.h" bodystart="46" bodyend="85"/>
    <listofallmembers>
      <member refid="classchecker__pids_1a8ba295ce04686629f2e545eef082688a" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_dead</name></member>
      <member refid="classchecker__pids_1a065564a41603626bb7d1258c0cb075c3" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_forker</name></member>
      <member refid="classchecker__pids_1acd2982254315ed5976aee9f33001baee" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_me</name></member>
      <member refid="classchecker__pids_1ad738c2a7f7747a492d61a45d94a1ab51" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_p_run</name></member>
      <member refid="classchecker__pids_1aeaf6d7cdb81c03a5d152f5122cb485e9" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_pids</name></member>
      <member refid="classchecker__pids_1a12fce3aed3117c10f47eaddf28fcdba8" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_previousInterruptHandler_int</name></member>
      <member refid="classchecker__pids_1a7aaab276668326d002cdd1f4e333c5b7" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_previousInterruptHandler_term</name></member>
      <member refid="classchecker__pids_1a19aa5267dd935b87eed2fb7b2192e3de" prot="private" virt="non-virtual"><scope>checker_pids</scope><name>_previousInterruptHandler_usr1</name></member>
      <member refid="classchecker__pids_1a27c1ae8def4db8f6cb36917f61048e6d" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>add</name></member>
      <member refid="classchecker__pids_1ab2bffb76c0da98777ad2109be0b127ca" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>checker_pids</name></member>
      <member refid="classchecker__pids_1ad481c24cbe8f60fa780cf8f807188a7a" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>checker_pids</name></member>
      <member refid="classchecker__pids_1a10b144de7e14bc5cc1934f8f33143397" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>checker_pids</name></member>
      <member refid="classchecker__pids_1a418d36e7f2d0ddff6b5b74c5a89f5540" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>get_run_flags</name></member>
      <member refid="classchecker__pids_1afe18e52b8c0557fe2d791d4246d7b940" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>operator()</name></member>
      <member refid="classchecker__pids_1aa17a1b4c4b9b182fff3d78215488b1e4" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>operator=</name></member>
      <member refid="classchecker__pids_1a1e22231fb040beab1861fa5b14a864b8" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>operator=</name></member>
      <member refid="classchecker__pids_1a8670706ea3c75c45b7a9e43a99bf5a4e" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>sigterm_func</name></member>
      <member refid="classchecker__pids_1a8065fcd19912ad3e9b5affeaf3232ec6" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>StoppingChildren</name></member>
      <member refid="classchecker__pids_1a6318efeaea01e0e716dbd9931bf9c171" prot="public" virt="non-virtual"><scope>checker_pids</scope><name>~checker_pids</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
