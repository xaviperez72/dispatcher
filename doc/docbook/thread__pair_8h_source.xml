<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_thread__pair_8h_source" xml:lang="en-US">
<title>thread_pair.h</title>
<indexterm><primary>src/thread_pair.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_thread__pair_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;THREAD_PAIR_H</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;THREAD_PAIR_H</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00003"/>00003 
<anchor xml:id="_thread__pair_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;atomic&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;condition_variable&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;mutex&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;future&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;list&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;json/json.h&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;json/value.h&gt;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00013"/>00013 
<anchor xml:id="_thread__pair_8h_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ipclib_8h">ipclib.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_checker__pids_8h">checker_pids.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_connections_8h">connections.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_protocol__msg_8h">protocol_msg.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Socket_8h">Socket.h</link>&quot;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00020"/>00020 
<anchor xml:id="_thread__pair_8h_source_1l00021"/>00021 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00022"/>00022 <emphasis role="comment">struct&#32;signal_synch</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00023"/>00023 <emphasis role="comment">{</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00024"/>00024 <emphasis role="comment">&#32;&#32;&#32;&#32;sigset_t&#32;_sigset_new;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00025"/>00025 <emphasis role="comment">&#32;&#32;&#32;&#32;sigset_t&#32;_sigset_old;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00026"/>00026 <emphasis role="comment">&#32;&#32;&#32;&#32;std::mutex&#32;_cv_mutex;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00027"/>00027 <emphasis role="comment">&#32;&#32;&#32;&#32;std::condition_variable&#32;_cv;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00028"/>00028 <emphasis role="comment">&#32;&#32;&#32;&#32;std::future&lt;int&gt;&#32;&#32;_ft_signal_handler;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00029"/>00029 <emphasis role="comment">&#32;&#32;&#32;&#32;~signal_synch(){&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;Dtor&#32;signal_synch.&quot;;&#32;}</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00030"/>00030 <emphasis role="comment">};</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00031"/>00031 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00032"/>00032 
<anchor xml:id="_thread__pair_8h_source_1l00033"/><link linkend="_structsocket__data__t">00033</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structsocket__data__t">socket_data_t</link>&#32;{
<anchor xml:id="_thread__pair_8h_source_1l00034"/><link linkend="_structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f">sd</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Socket&#32;Descriptor.</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00035"/><link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">00035</link> &#32;&#32;&#32;&#32;sockaddr_in&#32;<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;OK&#32;Below</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00036"/><link linkend="_structsocket__data__t_1aa252e34de3632643e5679b18654c4f04">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsocket__data__t_1aa252e34de3632643e5679b18654c4f04">idx_con</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Index&#32;to&#32;Array&#32;conexiones&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00037"/><link linkend="_structsocket__data__t_1a6540b92dc049e8e3b2be6033d7084111">00037</link> &#32;&#32;&#32;&#32;std::string&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsocket__data__t_1a6540b92dc049e8e3b2be6033d7084111">rcvinfo</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;String&#32;to&#32;keep&#32;incoming&#32;msg.</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00038"/><link linkend="_structsocket__data__t_1a318acec5cea360329cb82fc28e7e3b1e">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsocket__data__t_1a318acec5cea360329cb82fc28e7e3b1e">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsocket__data__t">socket_data_t</link>&#32;&amp;c)<emphasis role="keyword">&#32;const&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00039"/>00039 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;&#32;&#32;
<anchor xml:id="_thread__pair_8h_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sd&#32;&quot;&#32;&lt;&lt;&#32;sd&#32;&lt;&lt;&#32;&quot;:&quot;&#32;&lt;&lt;&#32;c.sd;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;&#32;&#32;&#32;&#32;s_addr&#32;&quot;&#32;&lt;&lt;&#32;sockaddr.sin_addr.s_addr&#32;&lt;&lt;&#32;&quot;:&quot;&#32;&lt;&lt;&#32;c.sockaddr.sin_addr.s_addr;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;sin_family&#32;&quot;&#32;&lt;&lt;&#32;sockaddr.sin_family&#32;&lt;&lt;&#32;&quot;:&quot;&#32;&lt;&lt;&#32;c.sockaddr.sin_family;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;&#32;&#32;sin_port&#32;&quot;&#32;&lt;&lt;&#32;sockaddr.sin_port&#32;&lt;&lt;&#32;&quot;:&quot;&#32;&lt;&lt;&#32;c.sockaddr.sin_port;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LOG_DEBUG&#32;&lt;&lt;&#32;&quot;&#32;&#32;&#32;idx_con&#32;&quot;&#32;&lt;&lt;&#32;idx_con&#32;&lt;&lt;&#32;&quot;:&quot;&#32;&lt;&lt;&#32;c.idx_con;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f">sd</link>==c.<link linkend="_structsocket__data__t_1a0796047c7fbe7ad403803e318d28bf9f">sd</link>&#32;&amp;&amp;&#32;<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_addr.s_addr==c.<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_addr.s_addr&#32;&amp;&amp;&#32;<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_family==c.<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_family&#32;&amp;&amp;&#32;
<anchor xml:id="_thread__pair_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_port==c.<link linkend="_structsocket__data__t_1a16aaf1c1d992e8c415df13c9a7032bc9">sockaddr</link>.sin_port&#32;&amp;&amp;&#32;<link linkend="_structsocket__data__t_1aa252e34de3632643e5679b18654c4f04">idx_con</link>==c.<link linkend="_structsocket__data__t_1aa252e34de3632643e5679b18654c4f04">idx_con</link>;
<anchor xml:id="_thread__pair_8h_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_thread__pair_8h_source_1l00048"/>00048 };
<anchor xml:id="_thread__pair_8h_source_1l00049"/>00049 
<anchor xml:id="_thread__pair_8h_source_1l00050"/><link linkend="_classthread__pair">00050</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classthread__pair">thread_pair</link>
<anchor xml:id="_thread__pair_8h_source_1l00051"/>00051 {
<anchor xml:id="_thread__pair_8h_source_1l00052"/>00052 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_thread__pair_8h_source_1l00053"/><link linkend="_classthread__pair_1a5f91b0c7065a5b4ea1d9b2833eec0ee2">00053</link> &#32;&#32;&#32;&#32;std::thread&#32;<link linkend="_classthread__pair_1a5f91b0c7065a5b4ea1d9b2833eec0ee2">th_r</link>;
<anchor xml:id="_thread__pair_8h_source_1l00054"/><link linkend="_classthread__pair_1aaab23c5aeabc65a9d6eba6ef6d56e4b3">00054</link> &#32;&#32;&#32;&#32;std::thread&#32;<link linkend="_classthread__pair_1aaab23c5aeabc65a9d6eba6ef6d56e4b3">th_w</link>;
<anchor xml:id="_thread__pair_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;
<anchor xml:id="_thread__pair_8h_source_1l00056"/>00056 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_thread__pair_8h_source_1l00057"/><link linkend="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e">_idx_thp</link>{-1};
<anchor xml:id="_thread__pair_8h_source_1l00058"/><link linkend="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed">_pipe</link>[2]{-1,-1};
<anchor xml:id="_thread__pair_8h_source_1l00059"/><link linkend="_classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093">00059</link> &#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;<link linkend="_classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093">_write_queue</link>;
<anchor xml:id="_thread__pair_8h_source_1l00060"/><link linkend="_classthread__pair_1af0f10327ce77aa56346835d1132a93ad">00060</link> &#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;<link linkend="_classthread__pair_1af0f10327ce77aa56346835d1132a93ad">_common_queue</link>;
<anchor xml:id="_thread__pair_8h_source_1l00061"/><link linkend="_classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19">00061</link> &#32;&#32;&#32;&#32;std::mutex&#32;<link linkend="_classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19">_accept_mutex</link>;
<anchor xml:id="_thread__pair_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//shared_ptr&lt;mutex&gt;&#32;_accept_mutex;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00063"/><link linkend="_classthread__pair_1a7371d66499abbff03183171892687428">00063</link> &#32;&#32;&#32;&#32;std::list&lt;socket_data_t&gt;&#32;<link linkend="_classthread__pair_1a7371d66499abbff03183171892687428">_sockdata</link>;
<anchor xml:id="_thread__pair_8h_source_1l00064"/><link linkend="_classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28">00064</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;keep_running_flags&gt;&#32;<link linkend="_classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28">_sharedptr_keep_running</link>;
<anchor xml:id="_thread__pair_8h_source_1l00065"/><link linkend="_classthread__pair_1a64e6bf076b36b0abd2040545469c13c0">00065</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;connections&gt;&#32;<link linkend="_classthread__pair_1a64e6bf076b36b0abd2040545469c13c0">_p_cur_connections</link>;
<anchor xml:id="_thread__pair_8h_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//std::shared_ptr&lt;signal_synch&gt;&#32;_shpt_sigsyn;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00067"/><link linkend="_classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb">00067</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Semaphore&gt;&#32;<link linkend="_classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb">_shpt_semIPCfile</link>;
<anchor xml:id="_thread__pair_8h_source_1l00068"/>00068 
<anchor xml:id="_thread__pair_8h_source_1l00069"/>00069 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_thread__pair_8h_source_1l00070"/><link linkend="_classthread__pair_1a436e3475859bcebbc976a3c6105ce794">00070</link> &#32;&#32;&#32;&#32;<link linkend="_classthread__pair_1a436e3475859bcebbc976a3c6105ce794">thread_pair</link>()&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_thread__pair_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<link linkend="_classthread__pair_1a436e3475859bcebbc976a3c6105ce794">thread_pair</link>(<link linkend="_classMessageQueue">MessageQueue</link>&#32;write_queue_id,&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;common_queue,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx,&#32;std::shared_ptr&lt;keep_running_flags&gt;&#32;shpt_keep_running,&#32;
<anchor xml:id="_thread__pair_8h_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;connections&gt;&#32;shpt_conn,&#32;
<anchor xml:id="_thread__pair_8h_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::shared_ptr&lt;signal_synch&gt;&#32;shpt_sigsyn,&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;Semaphore&gt;&#32;shpt_sem);
<anchor xml:id="_thread__pair_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&#32;compiles&#32;with&#32;shared_ptr&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00076"/><link linkend="_classthread__pair_1ae8024707e66b2e8d4e4e6c6a3665d959">00076</link> &#32;&#32;&#32;&#32;<link linkend="_classthread__pair_1ae8024707e66b2e8d4e4e6c6a3665d959">thread_pair</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classthread__pair">thread_pair</link>&amp;)&#32;{&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;XAVI&#32;-&#32;COPY&#32;CTOR&#32;thread_pair&quot;</emphasis>;&#32;};&#32;<emphasis role="comment">//&#32;NOT&#32;CALLED!!&#32;run&#32;emplace_back&#32;:&#32;default&#32;-&#32;let&#32;emplace_back(&#32;)&#32;work!!&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;thread_pair(const&#32;thread_pair&amp;)&#32;=&#32;delete;&#32;//&#32;fail&#32;</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00078"/><link linkend="_classthread__pair_1aaf1cb28aa2dcce711c9de08665839db1">00078</link> &#32;&#32;&#32;&#32;<link linkend="_classthread__pair_1aaf1cb28aa2dcce711c9de08665839db1">thread_pair</link>(<link linkend="_classthread__pair">thread_pair</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;run&#32;emplace_back(std::move(&#32;))&#32;:&#32;default&#32;-&#32;fail!!</emphasis>
<anchor xml:id="_thread__pair_8h_source_1l00079"/><link linkend="_classthread__pair_1a12d97177534fdc55d25fc666f59281a6">00079</link> &#32;&#32;&#32;&#32;<link linkend="_classthread__pair">thread_pair</link>&amp;&#32;<link linkend="_classthread__pair_1a12d97177534fdc55d25fc666f59281a6">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classthread__pair">thread_pair</link>&amp;)&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_thread__pair_8h_source_1l00080"/><link linkend="_classthread__pair_1afdaf16d1719d5b432aa9456fff8940be">00080</link> &#32;&#32;&#32;&#32;<link linkend="_classthread__pair">thread_pair</link>&amp;&#32;<link linkend="_classthread__pair_1afdaf16d1719d5b432aa9456fff8940be">operator=</link>(<link linkend="_classthread__pair">thread_pair</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_thread__pair_8h_source_1l00081"/>00081 
<anchor xml:id="_thread__pair_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classthread__pair_1a542da55488a6cb54517473429d234801">reader_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;idx_thp);
<anchor xml:id="_thread__pair_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classthread__pair_1a6ebef75114e800552bdd19598f0964ad">writer_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;idx_thp);
<anchor xml:id="_thread__pair_8h_source_1l00084"/>00084 
<anchor xml:id="_thread__pair_8h_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a5059ef6b79e75c8f15aca5785c8ca15c">add_sockdata</link>(<link linkend="_structsocket__data__t">socket_data_t</link>&#32;sdt);
<anchor xml:id="_thread__pair_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092">remove_sockdata</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsocket__data__t">socket_data_t</link>&#32;&amp;sdt);
<anchor xml:id="_thread__pair_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512">get_sockdata_list</link>(std::list&lt;socket_data_t&gt;&#32;&amp;lsdt);
<anchor xml:id="_thread__pair_8h_source_1l00088"/><link linkend="_classthread__pair_1a04aa8647a7584d9e7246a9aadf7ce108">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a04aa8647a7584d9e7246a9aadf7ce108">get_size_of_sock_list</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a7371d66499abbff03183171892687428">_sockdata</link>.size();}
<anchor xml:id="_thread__pair_8h_source_1l00089"/><link linkend="_classthread__pair_1a6c14f207dab415ad3c4bb8cad8e226f1">00089</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a6c14f207dab415ad3c4bb8cad8e226f1">get_read_pipe</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed">_pipe</link>[0];}
<anchor xml:id="_thread__pair_8h_source_1l00090"/><link linkend="_classthread__pair_1ab5cbe0341d15af61d0c0b7b6aa604a83">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1ab5cbe0341d15af61d0c0b7b6aa604a83">get_write_pipe</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed">_pipe</link>[1];}
<anchor xml:id="_thread__pair_8h_source_1l00091"/><link linkend="_classthread__pair_1a63f54129ef00c38b207324b19febf6e1">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1a63f54129ef00c38b207324b19febf6e1">get_id</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e">_idx_thp</link>;}
<anchor xml:id="_thread__pair_8h_source_1l00092"/><link linkend="_classthread__pair_1acd61f7b1e9aea4b37563a49867fb873b">00092</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1acd61f7b1e9aea4b37563a49867fb873b">get_idx</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e">_idx_thp</link>-1;}
<anchor xml:id="_thread__pair_8h_source_1l00093"/><link linkend="_classthread__pair_1a837146c433c08e88eb0cd99cf897b049">00093</link> &#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&amp;&#32;<link linkend="_classthread__pair_1a837146c433c08e88eb0cd99cf897b049">get_write_queue</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093">_write_queue</link>;&#32;}
<anchor xml:id="_thread__pair_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623">Prepare_Msg_Json_To_Send</link>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;&amp;v_protomsg,&#32;std::string&#32;msg,&#32;Json::Value&#32;&amp;json_msg);
<anchor xml:id="_thread__pair_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6">Attending_Read_Socket</link>(<link linkend="_structsocket__data__t">socket_data_t</link>&#32;&amp;sdt);
<anchor xml:id="_thread__pair_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classthread__pair_1ac706f952db441120c6b7ccc709193786">Getting_Json_Msg_Received</link>(std::string&#32;&amp;msgin,&#32;<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;&amp;v_protomsg,&#32;std::string&#32;&amp;msgout);
<anchor xml:id="_thread__pair_8h_source_1l00097"/>00097 };
<anchor xml:id="_thread__pair_8h_source_1l00098"/>00098 
<anchor xml:id="_thread__pair_8h_source_1l00099"/>00099 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
