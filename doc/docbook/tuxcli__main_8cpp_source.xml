<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tuxcli__main_8cpp_source" xml:lang="en-US">
<title>tuxcli_main.cpp</title>
<indexterm><primary>src/tuxcli_main.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_tuxcli__main_8cpp_source_1l00001"/>00001 <emphasis role="comment">/***************************************</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;GLOBAL&#32;VARS&#32;-&#32;IN&#32;COMMON.H</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;***************************************/</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#if&#32;!defined&#32;LOGLEVEL</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00005"/><link linkend="_tuxcli__main_8cpp_1a6c6fd5e242df15a7a42e9b75d55d5d3c">00005</link> <emphasis role="preprocessor">#define&#32;LOGLEVEL</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00006"/><link linkend="_tuxcli__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">00006</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_tuxcli__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00008"/>00008 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;json/json.h&gt;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00012"/>00012 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ipclib_8h">ipclib.h</link>&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_getcfgfile_8h">getcfgfile.h</link>&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_dispatch__cfg_8h">dispatch_cfg.h</link>&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_checker__pids_8h">checker_pids.h</link>&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;plog/Initializers/RollingFileInitializer.h&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;plog/Initializers/ConsoleInitializer.h&quot;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00020"/>00020 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00021"/>00021 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00022"/>00022 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00023"/><link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">00023</link> <emphasis role="keyword">auto</emphasis>&#32;<link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00024"/>00024 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00025"/><link linkend="_tuxcli__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">00025</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tuxcli__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>(<emphasis role="keywordtype">int</emphasis>&#32;s)&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00026"/>00026 {
<anchor xml:id="_tuxcli__main_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Received&#32;signal&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;s&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strsignal(s)&#32;&lt;&lt;&#32;\
<anchor xml:id="_tuxcli__main_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;keep_accepting&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00029"/>00029 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00031"/>00031 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Received&#32;signal&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;s&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strsignal(s)&#32;&lt;&lt;&#32;\
<anchor xml:id="_tuxcli__main_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;keep_accepting&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00034"/>00034 }
<anchor xml:id="_tuxcli__main_8cpp_source_1l00035"/>00035 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00036"/><link linkend="_tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0">00036</link> <link linkend="_classchecker__pids">checker_pids</link>&#32;<link linkend="_tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0">chk_procs</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00037"/>00037 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00038"/><link linkend="_classTuxClient">00038</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classTuxClient">TuxClient</link>&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00039"/>00039 {
<anchor xml:id="_tuxcli__main_8cpp_source_1l00040"/><link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>{0};
<anchor xml:id="_tuxcli__main_8cpp_source_1l00041"/><link linkend="_classTuxClient_1ac24e2ed32f42a4065d71eae0a36b6829">00041</link> &#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;&amp;<link linkend="_classTuxClient_1ac24e2ed32f42a4065d71eae0a36b6829">common_queue</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00042"/>00042 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_tuxcli__main_8cpp_source_1l00043"/><link linkend="_classTuxClient_1a0d30b7727e56792657403affcee79901">00043</link> &#32;&#32;&#32;&#32;<link linkend="_classTuxClient_1a0d30b7727e56792657403affcee79901">TuxClient</link>(<emphasis role="keywordtype">int</emphasis>&#32;idx,&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;&amp;queue):<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>{idx},<link linkend="_classTuxClient_1ac24e2ed32f42a4065d71eae0a36b6829">common_queue</link>{queue}{}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classTuxClient_1a6e00a2d0ed796c1f9a0b6e26499ff9f5">operator()</link>();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00045"/>00045 };
<anchor xml:id="_tuxcli__main_8cpp_source_1l00046"/>00046 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00047"/><link linkend="_classTuxClient_1a6e00a2d0ed796c1f9a0b6e26499ff9f5">00047</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classTuxClient_1a6e00a2d0ed796c1f9a0b6e26499ff9f5">TuxClient::operator()</link>()
<anchor xml:id="_tuxcli__main_8cpp_source_1l00048"/>00048 {
<anchor xml:id="_tuxcli__main_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Running&#32;TuxClient&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00050"/>00050 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="_tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0">chk_procs</link>.<link linkend="_classchecker__pids_1a418d36e7f2d0ddff6b5b74c5a89f5540">get_run_flags</link>()-&gt;_keep_accepting.load())&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;msgin;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;v_protomsg;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00055"/>00055 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classTuxClient_1ac24e2ed32f42a4065d71eae0a36b6829">common_queue</link>.<link linkend="_classMessageQueue_1ae4afb1b560697ce2a0bd8a0b5bca8f21">rcv</link>(&amp;v_protomsg,&#32;msgin);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00057"/>00057 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_tuxcli__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>)&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;Received&#32;msg:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;v_protomsg;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00061"/>00061 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msgin&#32;+=&#32;<emphasis role="stringliteral">&quot;&#32;OK&#32;-&#32;TX&#32;DONE!!&#32;&quot;</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep(1);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00064"/>00064 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;TX&#32;EXECUTED&#32;OK!!&#32;&quot;</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00066"/>00066 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;msg_resp(v_protomsg.q_write);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(msg_resp)&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg_resp.<link linkend="_classMessageQueue_1ac3138a4b8f10868f1df70519257fa45f">send</link>(&amp;v_protomsg,msgin);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00074"/>00074 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Ending&#32;TuxClient&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classTuxClient_1ad471945feae29ecb0e123aa8d3fdd82c">idx_cli</link>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00076"/>00076 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00078"/>00078 }
<anchor xml:id="_tuxcli__main_8cpp_source_1l00079"/>00079 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00080"/><link linkend="_tuxcli__main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627">00080</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_client__main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)
<anchor xml:id="_tuxcli__main_8cpp_source_1l00081"/>00081 {
<anchor xml:id="_tuxcli__main_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TO&#32;DO&#32;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;level&#32;of&#32;log&#32;from&#32;file&#32;config.&#32;Now&#32;it&#32;is&#32;only&#32;DEBUG.</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;plog::ConsoleAppender&lt;plog::TxtFormatter&gt;&#32;consoleAppender;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<link linkend="_tuxcli__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>=plog::verbose;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;plog::init(plog::verbose,&#32;&amp;consoleAppender);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00087"/>00087 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(argc&#32;!=&#32;3)&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Uso:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;argv[0]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&lt;IpcFile&gt;&#32;&lt;TuxCliSetup&gt;&#32;\n&quot;</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(1);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00093"/>00093 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;tuxcli_main&#32;START!!&quot;</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00095"/>00095 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00096"/>00096 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Getting&#32;configs&#32;files&#32;(IPCS&#32;and&#32;tuxclisetup&#32;)&#32;.....</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00098"/>00098 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;std::string&#32;ipcfile_str(argv[1]);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;std::string&#32;tuxclisetup_str(argv[2]);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00101"/>00101 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<link linkend="_classGetCfgFile">GetCfgFile</link>&#32;ipcfile(ipcfile_str);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<link linkend="_classGetCfgFile">GetCfgFile</link>&#32;tuxclisetup(tuxclisetup_str);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00104"/>00104 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ipcfile&#32;||&#32;!tuxclisetup)
<anchor xml:id="_tuxcli__main_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ipcfile)
<anchor xml:id="_tuxcli__main_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;File&#32;error:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;ipcfile_str;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;File&#32;error:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;tuxclisetup_str;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(1);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00113"/>00113 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Json::Value&#32;ipcs_json&#32;=&#32;ipcfile.<link linkend="_classGetCfgFile_1ada73da323a67df88e661ffe0dc7420d7">get_json</link>();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00115"/>00115 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;just&#32;need&#32;common&#32;queue&#32;id:</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;msg_common_id&#32;=&#32;ipcs_json[<emphasis role="stringliteral">&quot;msg_common_id&quot;</emphasis>].asInt();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00118"/>00118 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<link linkend="_classMessageQueue">MessageQueue</link>&#32;common_queue(msg_common_id);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!common_queue)
<anchor xml:id="_tuxcli__main_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Common&#32;Queue&#32;error:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msg_common_id;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(1);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00125"/>00125 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LoadIPTXTable&#32;-&#32;Load&#32;all&#32;allowed&#32;transaction&#32;ID&#32;on&#32;Shared&#32;Memory</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LoadTRMLTable&#32;-&#32;Load&#32;all&#32;allowed&#32;terminal&#32;ID&#32;on&#32;Shared&#32;Memory</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00129"/>00129 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00130"/>00130 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;previousInterruptHandler_sigsegv&#32;=&#32;signal(SIGSEGV,&#32;<link linkend="_tuxcli__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00132"/>00132 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00133"/>00133 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Launching&#32;all&#32;processess...</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00135"/>00135 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Json::Value&#32;setup_json&#32;=&#32;tuxclisetup.<link linkend="_classGetCfgFile_1ada73da323a67df88e661ffe0dc7420d7">get_json</link>();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00137"/>00137 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;min_tux_cli&#32;=&#32;setup_json[<emphasis role="stringliteral">&quot;min_tux_cli&quot;</emphasis>].asInt();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_tux_cli&#32;=&#32;setup_json[<emphasis role="stringliteral">&quot;max_tux_cli&quot;</emphasis>].asInt();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xml_n_term&#32;&#32;=&#32;setup_json[<emphasis role="stringliteral">&quot;xml_n_term&quot;</emphasis>].asInt();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00141"/>00141 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&#32;&lt;&#32;min_tux_cli;&#32;i++)&#32;{
<anchor xml:id="_tuxcli__main_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classTuxClient">TuxClient</link>&#32;tux(i,common_queue);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0">chk_procs</link>.<link linkend="_classchecker__pids_1a27c1ae8def4db8f6cb36917f61048e6d">add</link>(tux,<emphasis role="stringliteral">&quot;TuxClient&quot;</emphasis>);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tuxcli__main_8cpp_source_1l00146"/>00146 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Launching&#32;all&#32;processes...&#32;</emphasis>
<anchor xml:id="_tuxcli__main_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret=<link linkend="_tuxcli__main_8cpp_1a843417470d039db4cb8fff476bb938b0">chk_procs</link>();
<anchor xml:id="_tuxcli__main_8cpp_source_1l00149"/>00149 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Ending&#32;tuxcli_main&quot;</emphasis>;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;(void)signal(SIGSEGV,&#32;previousInterruptHandler_sigsegv);
<anchor xml:id="_tuxcli__main_8cpp_source_1l00153"/>00153 
<anchor xml:id="_tuxcli__main_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_tuxcli__main_8cpp_source_1l00155"/>00155 }
</programlisting></section>
