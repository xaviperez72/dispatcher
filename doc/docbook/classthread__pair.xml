<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classthread__pair" xml:lang="en-US">
<title>thread_pair Class Reference</title>
<indexterm><primary>thread_pair</primary></indexterm>
<para>
<computeroutput>#include &lt;thread_pair.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classthread__pair_1a436e3475859bcebbc976a3c6105ce794">thread_pair</link> ()=delete</para>
</listitem>
            <listitem><para><link linkend="_classthread__pair_1acf8b3f678e83f280cb66f7d1ee5d0fd3">thread_pair</link> (<link linkend="_classMessageQueue">MessageQueue</link> write_queue_id, <link linkend="_classMessageQueue">MessageQueue</link> common_queue, int idx, std::shared_ptr&lt; <link linkend="_structkeep__running__flags">keep_running_flags</link> &gt; shpt_keep_running, std::shared_ptr&lt; <link linkend="_classconnections">connections</link> &gt; shpt_conn, std::shared_ptr&lt; <link linkend="_classSemaphore">Semaphore</link> &gt; shpt_sem)</para>
</listitem>
            <listitem><para><link linkend="_classthread__pair_1ae8024707e66b2e8d4e4e6c6a3665d959">thread_pair</link> (const <link linkend="_classthread__pair">thread_pair</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_classthread__pair_1aaf1cb28aa2dcce711c9de08665839db1">thread_pair</link> (<link linkend="_classthread__pair">thread_pair</link> &amp;&amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_classthread__pair">thread_pair</link> &amp; <link linkend="_classthread__pair_1a12d97177534fdc55d25fc666f59281a6">operator=</link> (const <link linkend="_classthread__pair">thread_pair</link> &amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_classthread__pair">thread_pair</link> &amp; <link linkend="_classthread__pair_1afdaf16d1719d5b432aa9456fff8940be">operator=</link> (<link linkend="_classthread__pair">thread_pair</link> &amp;&amp;)=delete</para>
</listitem>
            <listitem><para>void <link linkend="_classthread__pair_1a542da55488a6cb54517473429d234801">reader_thread</link> (int idx_thp)</para>
</listitem>
            <listitem><para>void <link linkend="_classthread__pair_1a6ebef75114e800552bdd19598f0964ad">writer_thread</link> (int idx_thp)</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a5059ef6b79e75c8f15aca5785c8ca15c">add_sockdata</link> (<link linkend="_structsocket__data__t">socket_data_t</link> sdt)</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092">remove_sockdata</link> (const <link linkend="_structsocket__data__t">socket_data_t</link> &amp;sdt)</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512">get_sockdata_list</link> (std::list&lt; <link linkend="_structsocket__data__t">socket_data_t</link> &gt; &amp;lsdt)</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a04aa8647a7584d9e7246a9aadf7ce108">get_size_of_sock_list</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a6c14f207dab415ad3c4bb8cad8e226f1">get_read_pipe</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1ab5cbe0341d15af61d0c0b7b6aa604a83">get_write_pipe</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a63f54129ef00c38b207324b19febf6e1">get_id</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1acd61f7b1e9aea4b37563a49867fb873b">get_idx</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classMessageQueue">MessageQueue</link> &amp; <link linkend="_classthread__pair_1a837146c433c08e88eb0cd99cf897b049">get_write_queue</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623">Prepare_Msg_Json_To_Send</link> (<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link> &amp;v_protomsg, std::string msg, Json::Value &amp;json_msg)</para>
</listitem>
            <listitem><para>void <link linkend="_classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6">Attending_Read_Socket</link> (<link linkend="_structsocket__data__t">socket_data_t</link> &amp;sdt)</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1ac706f952db441120c6b7ccc709193786">Getting_Json_Msg_Received</link> (std::string &amp;msgin, <link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link> &amp;v_protomsg, std::string &amp;msgout)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::thread <link linkend="_classthread__pair_1a5f91b0c7065a5b4ea1d9b2833eec0ee2">th_r</link></para>
</listitem>
            <listitem><para>std::thread <link linkend="_classthread__pair_1aaab23c5aeabc65a9d6eba6ef6d56e4b3">th_w</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e">_idx_thp</link> {-1}</para>
</listitem>
            <listitem><para>int <link linkend="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed">_pipe</link> [2] {-1,-1}</para>
</listitem>
            <listitem><para><link linkend="_classMessageQueue">MessageQueue</link> <link linkend="_classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093">_write_queue</link></para>
</listitem>
            <listitem><para><link linkend="_classMessageQueue">MessageQueue</link> <link linkend="_classthread__pair_1af0f10327ce77aa56346835d1132a93ad">_common_queue</link></para>
</listitem>
            <listitem><para>std::mutex <link linkend="_classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19">_accept_mutex</link></para>
</listitem>
            <listitem><para>std::list&lt; <link linkend="_structsocket__data__t">socket_data_t</link> &gt; <link linkend="_classthread__pair_1a7371d66499abbff03183171892687428">_sockdata</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_structkeep__running__flags">keep_running_flags</link> &gt; <link linkend="_classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28">_sharedptr_keep_running</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classconnections">connections</link> &gt; <link linkend="_classthread__pair_1a64e6bf076b36b0abd2040545469c13c0">_p_cur_connections</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classSemaphore">Semaphore</link> &gt; <link linkend="_classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb">_shpt_semIPCfile</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_thread__pair_8h_source_1l00050">50</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classthread__pair_1a436e3475859bcebbc976a3c6105ce794"/><section>
    <title>thread_pair()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<para><computeroutput>thread_pair::thread_pair ( )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classthread__pair_1acf8b3f678e83f280cb66f7d1ee5d0fd3"/><section>
    <title>thread_pair()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<para><computeroutput>thread_pair::thread_pair (<link linkend="_classMessageQueue">MessageQueue</link> write_queue_id, <link linkend="_classMessageQueue">MessageQueue</link> common_queue, int idx, std::shared_ptr&lt; <link linkend="_structkeep__running__flags">keep_running_flags</link> &gt; shpt_keep_running, std::shared_ptr&lt; <link linkend="_classconnections">connections</link> &gt; shpt_conn, std::shared_ptr&lt; <link linkend="_classSemaphore">Semaphore</link> &gt; shpt_sem)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00005">5</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1ae8024707e66b2e8d4e4e6c6a3665d959"/><section>
    <title>thread_pair()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<para><computeroutput>thread_pair::thread_pair (const <link linkend="_classthread__pair">thread_pair</link> &amp; )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00076">76</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1aaf1cb28aa2dcce711c9de08665839db1"/><section>
    <title>thread_pair()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>thread_pair</secondary></indexterm>
<para><computeroutput>thread_pair::thread_pair (<link linkend="_classthread__pair">thread_pair</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classthread__pair_1a5059ef6b79e75c8f15aca5785c8ca15c"/><section>
    <title>add_sockdata()</title>
<indexterm><primary>add_sockdata</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>add_sockdata</secondary></indexterm>
<para><computeroutput>int thread_pair::add_sockdata (<link linkend="_structsocket__data__t">socket_data_t</link> sdt)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00280">280</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1ac8a0f9dd6117f68e75f9222488f115f6"/><section>
    <title>Attending_Read_Socket()</title>
<indexterm><primary>Attending_Read_Socket</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>Attending_Read_Socket</secondary></indexterm>
<para><computeroutput>void thread_pair::Attending_Read_Socket (<link linkend="_structsocket__data__t">socket_data_t</link> &amp; sdt)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00033">33</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a63f54129ef00c38b207324b19febf6e1"/><section>
    <title>get_id()</title>
<indexterm><primary>get_id</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_id</secondary></indexterm>
<para><computeroutput>int thread_pair::get_id ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00091">91</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1acd61f7b1e9aea4b37563a49867fb873b"/><section>
    <title>get_idx()</title>
<indexterm><primary>get_idx</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_idx</secondary></indexterm>
<para><computeroutput>int thread_pair::get_idx ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00092">92</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a6c14f207dab415ad3c4bb8cad8e226f1"/><section>
    <title>get_read_pipe()</title>
<indexterm><primary>get_read_pipe</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_read_pipe</secondary></indexterm>
<para><computeroutput>int thread_pair::get_read_pipe ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00089">89</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a04aa8647a7584d9e7246a9aadf7ce108"/><section>
    <title>get_size_of_sock_list()</title>
<indexterm><primary>get_size_of_sock_list</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_size_of_sock_list</secondary></indexterm>
<para><computeroutput>int thread_pair::get_size_of_sock_list ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00088">88</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a15322b033ebd6882f6ee9c81cc21b512"/><section>
    <title>get_sockdata_list()</title>
<indexterm><primary>get_sockdata_list</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_sockdata_list</secondary></indexterm>
<para><computeroutput>int thread_pair::get_sockdata_list (std::list&lt; <link linkend="_structsocket__data__t">socket_data_t</link> &gt; &amp; lsdt)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00308">308</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1ab5cbe0341d15af61d0c0b7b6aa604a83"/><section>
    <title>get_write_pipe()</title>
<indexterm><primary>get_write_pipe</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_write_pipe</secondary></indexterm>
<para><computeroutput>int thread_pair::get_write_pipe ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00090">90</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a837146c433c08e88eb0cd99cf897b049"/><section>
    <title>get_write_queue()</title>
<indexterm><primary>get_write_queue</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>get_write_queue</secondary></indexterm>
<para><computeroutput><link linkend="_classMessageQueue">MessageQueue</link> &amp; thread_pair::get_write_queue ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00093">93</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1ac706f952db441120c6b7ccc709193786"/><section>
    <title>Getting_Json_Msg_Received()</title>
<indexterm><primary>Getting_Json_Msg_Received</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>Getting_Json_Msg_Received</secondary></indexterm>
<para><computeroutput>int thread_pair::Getting_Json_Msg_Received (std::string &amp; msgin, <link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link> &amp; v_protomsg, std::string &amp; msgout)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00093">93</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a12d97177534fdc55d25fc666f59281a6"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classthread__pair">thread_pair</link> &amp; thread_pair::operator= (const <link linkend="_classthread__pair">thread_pair</link> &amp; )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classthread__pair_1afdaf16d1719d5b432aa9456fff8940be"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classthread__pair">thread_pair</link> &amp; thread_pair::operator= (<link linkend="_classthread__pair">thread_pair</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classthread__pair_1a7047531ed209fcd47ad85cf8a6ad8623"/><section>
    <title>Prepare_Msg_Json_To_Send()</title>
<indexterm><primary>Prepare_Msg_Json_To_Send</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>Prepare_Msg_Json_To_Send</secondary></indexterm>
<para><computeroutput>void thread_pair::Prepare_Msg_Json_To_Send (<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link> &amp; v_protomsg, std::string msg, Json::Value &amp; json_msg)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00211">211</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a542da55488a6cb54517473429d234801"/><section>
    <title>reader_thread()</title>
<indexterm><primary>reader_thread</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>reader_thread</secondary></indexterm>
<para><computeroutput>void thread_pair::reader_thread (int idx_thp)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00122">122</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a2d936545f8c4da9bb9271f1b355f4092"/><section>
    <title>remove_sockdata()</title>
<indexterm><primary>remove_sockdata</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>remove_sockdata</secondary></indexterm>
<para><computeroutput>int thread_pair::remove_sockdata (const <link linkend="_structsocket__data__t">socket_data_t</link> &amp; sdt)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00290">290</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a6ebef75114e800552bdd19598f0964ad"/><section>
    <title>writer_thread()</title>
<indexterm><primary>writer_thread</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>writer_thread</secondary></indexterm>
<para><computeroutput>void thread_pair::writer_thread (int idx_thp)</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8cpp_source_1l00222">222</link> of file <link linkend="_thread__pair_8cpp_source">thread_pair.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classthread__pair_1ab7a9a2bfb659ede1bebbb06a38a89f19"/><section>
    <title>_accept_mutex</title>
<indexterm><primary>_accept_mutex</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_accept_mutex</secondary></indexterm>
<para><computeroutput>std::mutex thread_pair::_accept_mutex<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00061">61</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1af0f10327ce77aa56346835d1132a93ad"/><section>
    <title>_common_queue</title>
<indexterm><primary>_common_queue</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_common_queue</secondary></indexterm>
<para><computeroutput><link linkend="_classMessageQueue">MessageQueue</link> thread_pair::_common_queue<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00060">60</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a6070dd7cb7890f810b3c8730f800cd5e"/><section>
    <title>_idx_thp</title>
<indexterm><primary>_idx_thp</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_idx_thp</secondary></indexterm>
<para><computeroutput>int thread_pair::_idx_thp {-1}<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00057">57</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a64e6bf076b36b0abd2040545469c13c0"/><section>
    <title>_p_cur_connections</title>
<indexterm><primary>_p_cur_connections</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_p_cur_connections</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classconnections">connections</link>&gt; thread_pair::_p_cur_connections<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00065">65</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a48ce2674603551cda5da4c526bd0ceed"/><section>
    <title>_pipe</title>
<indexterm><primary>_pipe</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_pipe</secondary></indexterm>
<para><computeroutput>int thread_pair::_pipe[2] {-1,-1}<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00058">58</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1aef0f78598d5c8bf62f73b0faa5f8ac28"/><section>
    <title>_sharedptr_keep_running</title>
<indexterm><primary>_sharedptr_keep_running</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_sharedptr_keep_running</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_structkeep__running__flags">keep_running_flags</link>&gt; thread_pair::_sharedptr_keep_running<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00064">64</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a04656cf6e7247a59e69eeeb6101b3ddb"/><section>
    <title>_shpt_semIPCfile</title>
<indexterm><primary>_shpt_semIPCfile</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_shpt_semIPCfile</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classSemaphore">Semaphore</link>&gt; thread_pair::_shpt_semIPCfile<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00067">67</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a7371d66499abbff03183171892687428"/><section>
    <title>_sockdata</title>
<indexterm><primary>_sockdata</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_sockdata</secondary></indexterm>
<para><computeroutput>std::list&lt;<link linkend="_structsocket__data__t">socket_data_t</link>&gt; thread_pair::_sockdata<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00063">63</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a6cb38f1b6d4b0b494c3bae5e4b95d093"/><section>
    <title>_write_queue</title>
<indexterm><primary>_write_queue</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>_write_queue</secondary></indexterm>
<para><computeroutput><link linkend="_classMessageQueue">MessageQueue</link> thread_pair::_write_queue<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00059">59</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1a5f91b0c7065a5b4ea1d9b2833eec0ee2"/><section>
    <title>th_r</title>
<indexterm><primary>th_r</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>th_r</secondary></indexterm>
<para><computeroutput>std::thread thread_pair::th_r</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00053">53</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<anchor xml:id="_classthread__pair_1aaab23c5aeabc65a9d6eba6ef6d56e4b3"/><section>
    <title>th_w</title>
<indexterm><primary>th_w</primary><secondary>thread_pair</secondary></indexterm>
<indexterm><primary>thread_pair</primary><secondary>th_w</secondary></indexterm>
<para><computeroutput>std::thread thread_pair::th_w</computeroutput></para><para>
Definition at line <link linkend="_thread__pair_8h_source_1l00054">54</link> of file <link linkend="_thread__pair_8h_source">thread_pair.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="_thread__pair_8h">thread_pair.h</link>src/<link linkend="_thread__pair_8cpp">thread_pair.cpp</link></section>
</section>
