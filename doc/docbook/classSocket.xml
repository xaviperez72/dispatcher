<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classSocket" xml:lang="en-US">
<title>Socket Class Reference</title>
<indexterm><primary>Socket</primary></indexterm>
<para>
<computeroutput>#include &lt;Socket.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classSocket_1a7c3256c4fc6e2c603df73201049fae5a">Socket</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classSocket_1a87656ab3b60c9f793a426e0cb2d57317">Socket</link> (int domain, int type, int protocol)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1a4f142a9d6ffd312c72bc813797658a1b">bind</link> (std::string ip, std::string <link linkend="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6">port</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1ac57cbd359ac6c4c731dbcebebfc6af5c">connect</link> (std::string ip, std::string <link linkend="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6">port</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1af4b275979ee2f9b28bbc54c90daae2e9">listen</link> (int max_queue)</para>
</listitem>
            <listitem><para><link linkend="_classSocket">Socket</link> <link linkend="_classSocket_1a3f749d9a206e48a875e8c24f29500a93">accept</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1a564eb3f48d8cb31423076e68f8cc1f54">socket_write</link> (std::string msg)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1ad7b9a7832dc2384d4f899afd73cb1193">socket_read</link> (std::string &amp;buf, int len)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1a27b26f9051e8ff3deeb8bfe0f0dea66f">socket_safe_read</link> (std::string &amp;buf, int len, int seconds)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1afc14b0a6d28023b8388dc63f1715da65">socket_writeTo</link> (std::string msg, std::string ip, std::string <link linkend="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6">port</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1ab244c6b09f175b4423790886d2eb9486">socket_readFrom</link> (std::string &amp;buf, int len, std::string ip, std::string <link linkend="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6">port</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1acac0892dfa60b7034b662060f640009a">socket_set_opt</link> (int level, int optname, void *optval)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1ab51d01cc80b2a4648086322d9e99417b">socket_get_opt</link> (int level, int optname, void *optval)</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1a2a59b2d7eef6873ab1849951fd23ea0b">set_blocking</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1a28772006630fafe066e1e4db34fc8a8d">set_non_blocking</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classSocket_1af6f86be700a215da342cfaeba37e7c0f">socket_shutdown</link> (int how)</para>
</listitem>
            <listitem><para>void <link linkend="_classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8">close</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static int <link linkend="_classSocket_1a8078f3895616b76dae6367e765bc5744">select</link> (std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; *reads, std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; *writes, std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; *exceptions, int seconds)</para>
</listitem>
            <listitem><para>static std::string <link linkend="_classSocket_1a49b6d9bbc776522388ce7c13d3a0ac57">ipFromHostName</link> (std::string hostname)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_classSocket_1a231ddf6e338a86640e26808b83efeaa1">sock</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_classSocket_1a2708e6a0b9b2b4c2c547757c86848cf4">address</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6">port</link></para>
</listitem>
            <listitem><para>struct addrinfo <link linkend="_classSocket_1a641d9c790350664e5e90dce7d78bd59a">address_info</link></para>
</listitem>
            <listitem><para>struct sockaddr_storage <link linkend="_classSocket_1ac4c0caa322e951195f18053bdfdd81ce">their_addr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_Socket_8h_source_1l00026">26</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classSocket_1a7c3256c4fc6e2c603df73201049fae5a"/><section>
    <title>Socket()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Socket</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>Socket</secondary></indexterm>
<para><computeroutput>Socket::Socket ( )</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00012">12</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a87656ab3b60c9f793a426e0cb2d57317"/><section>
    <title>Socket()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Socket</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>Socket</secondary></indexterm>
<para><computeroutput>Socket::Socket (int domain, int type, int protocol)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00015">15</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classSocket_1a3f749d9a206e48a875e8c24f29500a93"/><section>
    <title>accept()</title>
<indexterm><primary>accept</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>accept</secondary></indexterm>
<para><computeroutput><link linkend="_classSocket">Socket</link> Socket::accept ( )</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00113">113</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a4f142a9d6ffd312c72bc813797658a1b"/><section>
    <title>bind()</title>
<indexterm><primary>bind</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>bind</secondary></indexterm>
<para><computeroutput>int Socket::bind (std::string ip, std::string port)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00031">31</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a75ee749264ccbcfc4dfbf5442e55dcb8"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>close</secondary></indexterm>
<para><computeroutput>void Socket::close ( )</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00279">279</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1ac57cbd359ac6c4c731dbcebebfc6af5c"/><section>
    <title>connect()</title>
<indexterm><primary>connect</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>connect</secondary></indexterm>
<para><computeroutput>int Socket::connect (std::string ip, std::string port)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00067">67</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a49b6d9bbc776522388ce7c13d3a0ac57"/><section>
    <title>ipFromHostName()</title>
<indexterm><primary>ipFromHostName</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>ipFromHostName</secondary></indexterm>
<para><computeroutput>string Socket::ipFromHostName (std::string hostname)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00360">360</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1af4b275979ee2f9b28bbc54c90daae2e9"/><section>
    <title>listen()</title>
<indexterm><primary>listen</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>listen</secondary></indexterm>
<para><computeroutput>int Socket::listen (int max_queue)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00103">103</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a8078f3895616b76dae6367e765bc5744"/><section>
    <title>select()</title>
<indexterm><primary>select</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>select</secondary></indexterm>
<para><computeroutput>int Socket::select (std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; * reads, std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; * writes, std::vector&lt; <link linkend="_classSocket">Socket</link> &gt; * exceptions, int seconds)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00283">283</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a2a59b2d7eef6873ab1849951fd23ea0b"/><section>
    <title>set_blocking()</title>
<indexterm><primary>set_blocking</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>set_blocking</secondary></indexterm>
<para><computeroutput>int Socket::set_blocking ( )</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00240">240</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a28772006630fafe066e1e4db34fc8a8d"/><section>
    <title>set_non_blocking()</title>
<indexterm><primary>set_non_blocking</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>set_non_blocking</secondary></indexterm>
<para><computeroutput>int Socket::set_non_blocking ( )</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00255">255</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1ab51d01cc80b2a4648086322d9e99417b"/><section>
    <title>socket_get_opt()</title>
<indexterm><primary>socket_get_opt</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_get_opt</secondary></indexterm>
<para><computeroutput>int Socket::socket_get_opt (int level, int optname, void * optval)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00230">230</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1ad7b9a7832dc2384d4f899afd73cb1193"/><section>
    <title>socket_read()</title>
<indexterm><primary>socket_read</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_read</secondary></indexterm>
<para><computeroutput>int Socket::socket_read (std::string &amp; buf, int len)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00165">165</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1ab244c6b09f175b4423790886d2eb9486"/><section>
    <title>socket_readFrom()</title>
<indexterm><primary>socket_readFrom</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_readFrom</secondary></indexterm>
<para><computeroutput>int Socket::socket_readFrom (std::string &amp; buf, int len, std::string ip, std::string port)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00198">198</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a27b26f9051e8ff3deeb8bfe0f0dea66f"/><section>
    <title>socket_safe_read()</title>
<indexterm><primary>socket_safe_read</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_safe_read</secondary></indexterm>
<para><computeroutput>int Socket::socket_safe_read (std::string &amp; buf, int len, int seconds)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00146">146</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1acac0892dfa60b7034b662060f640009a"/><section>
    <title>socket_set_opt()</title>
<indexterm><primary>socket_set_opt</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_set_opt</secondary></indexterm>
<para><computeroutput>int Socket::socket_set_opt (int level, int optname, void * optval)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00220">220</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1af6f86be700a215da342cfaeba37e7c0f"/><section>
    <title>socket_shutdown()</title>
<indexterm><primary>socket_shutdown</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_shutdown</secondary></indexterm>
<para><computeroutput>int Socket::socket_shutdown (int how)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00270">270</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1a564eb3f48d8cb31423076e68f8cc1f54"/><section>
    <title>socket_write()</title>
<indexterm><primary>socket_write</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_write</secondary></indexterm>
<para><computeroutput>int Socket::socket_write (std::string msg)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00136">136</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
<anchor xml:id="_classSocket_1afc14b0a6d28023b8388dc63f1715da65"/><section>
    <title>socket_writeTo()</title>
<indexterm><primary>socket_writeTo</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>socket_writeTo</secondary></indexterm>
<para><computeroutput>int Socket::socket_writeTo (std::string msg, std::string ip, std::string port)</computeroutput></para><para>
Definition at line <link linkend="_Socket_8cpp_source_1l00176">176</link> of file <link linkend="_Socket_8cpp_source">Socket.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classSocket_1a2708e6a0b9b2b4c2c547757c86848cf4"/><section>
    <title>address</title>
<indexterm><primary>address</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>address</secondary></indexterm>
<para><computeroutput>std::string Socket::address</computeroutput></para><para>
Definition at line <link linkend="_Socket_8h_source_1l00030">30</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<anchor xml:id="_classSocket_1a641d9c790350664e5e90dce7d78bd59a"/><section>
    <title>address_info</title>
<indexterm><primary>address_info</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>address_info</secondary></indexterm>
<para><computeroutput>struct addrinfo Socket::address_info</computeroutput></para><para>
Definition at line <link linkend="_Socket_8h_source_1l00032">32</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<anchor xml:id="_classSocket_1af75711bf9c0f0788d7767f836a97c5e6"/><section>
    <title>port</title>
<indexterm><primary>port</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>port</secondary></indexterm>
<para><computeroutput>std::string Socket::port</computeroutput></para><para>
Definition at line <link linkend="_Socket_8h_source_1l00031">31</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<anchor xml:id="_classSocket_1a231ddf6e338a86640e26808b83efeaa1"/><section>
    <title>sock</title>
<indexterm><primary>sock</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>sock</secondary></indexterm>
<para><computeroutput>int Socket::sock</computeroutput></para><para>
Definition at line <link linkend="_Socket_8h_source_1l00029">29</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<anchor xml:id="_classSocket_1ac4c0caa322e951195f18053bdfdd81ce"/><section>
    <title>their_addr</title>
<indexterm><primary>their_addr</primary><secondary>Socket</secondary></indexterm>
<indexterm><primary>Socket</primary><secondary>their_addr</secondary></indexterm>
<para><computeroutput>struct sockaddr_storage Socket::their_addr</computeroutput></para><para>
Definition at line <link linkend="_Socket_8h_source_1l00033">33</link> of file <link linkend="_Socket_8h_source">Socket.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="_Socket_8h">Socket.h</link>src/<link linkend="_Socket_8cpp">Socket.cpp</link></section>
</section>
