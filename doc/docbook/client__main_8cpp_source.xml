<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_client__main_8cpp_source" xml:lang="en-US">
<title>client_main.cpp</title>
<indexterm><primary>src/client_main.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_client__main_8cpp_source_1l00001"/>00001 <emphasis role="comment">/***************************************</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;GLOBAL&#32;VARS&#32;-&#32;IN&#32;COMMON.H</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;***************************************/</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#if&#32;!defined&#32;LOGLEVEL</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00005"/><link linkend="_client__main_8cpp_1a6c6fd5e242df15a7a42e9b75d55d5d3c">00005</link> <emphasis role="preprocessor">#define&#32;LOGLEVEL</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00006"/><link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">00006</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>;
<anchor xml:id="_client__main_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00008"/>00008 
<anchor xml:id="_client__main_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;json/json.h&gt;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00012"/>00012 
<anchor xml:id="_client__main_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Socket_8h">Socket.h</link>&quot;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_protocol__msg_8h">protocol_msg.h</link>&quot;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;plog/Initializers/RollingFileInitializer.h&quot;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;plog/Initializers/ConsoleInitializer.h&quot;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00018"/>00018 
<anchor xml:id="_client__main_8cpp_source_1l00019"/>00019 <emphasis role="preprocessor">#ifdef&#32;&#32;__cplusplus</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00020"/>00020 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_client__main_8cpp_source_1l00021"/>00021 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00022"/>00022 
<anchor xml:id="_client__main_8cpp_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&lt;signal.h&gt;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&lt;sys/wait.h&gt;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00025"/>00025 
<anchor xml:id="_client__main_8cpp_source_1l00026"/>00026 <emphasis role="preprocessor">#ifdef&#32;&#32;__cplusplus</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00027"/>00027 }
<anchor xml:id="_client__main_8cpp_source_1l00028"/>00028 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00029"/>00029 
<anchor xml:id="_client__main_8cpp_source_1l00030"/>00030 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_client__main_8cpp_source_1l00031"/>00031 
<anchor xml:id="_client__main_8cpp_source_1l00032"/><link linkend="_client__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">00032</link> <emphasis role="keyword">auto</emphasis>&#32;<link linkend="_client__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_client__main_8cpp_source_1l00033"/>00033 
<anchor xml:id="_client__main_8cpp_source_1l00034"/><link linkend="_client__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">00034</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_client__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>(<emphasis role="keywordtype">int</emphasis>&#32;s)&#32;
<anchor xml:id="_client__main_8cpp_source_1l00035"/>00035 {
<anchor xml:id="_client__main_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Received&#32;signal&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;s&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strsignal(s)&#32;&lt;&lt;&#32;\
<anchor xml:id="_client__main_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;keep_accepting&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_client__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>;
<anchor xml:id="_client__main_8cpp_source_1l00038"/>00038 
<anchor xml:id="_client__main_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<link linkend="_client__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_client__main_8cpp_source_1l00040"/>00040 
<anchor xml:id="_client__main_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Received&#32;signal&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;s&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strsignal(s)&#32;&lt;&lt;&#32;\
<anchor xml:id="_client__main_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;keep_accepting&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_client__main_8cpp_1a182e40f49228b7c44921f0daab080e9d">keep_accepting</link>;
<anchor xml:id="_client__main_8cpp_source_1l00043"/>00043 }
<anchor xml:id="_client__main_8cpp_source_1l00044"/>00044 
<anchor xml:id="_client__main_8cpp_source_1l00045"/><link linkend="_client__main_8cpp_1a601b647decf34eb2826ae82ebe2ea155">00045</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_client__main_8cpp_1a601b647decf34eb2826ae82ebe2ea155">Prepare_Msg_Json_To_Send</link>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;&amp;v_protomsg,&#32;<emphasis role="keywordtype">string</emphasis>&#32;msg,&#32;Json::Value&#32;&amp;json_msg)
<anchor xml:id="_client__main_8cpp_source_1l00046"/>00046 {
<anchor xml:id="_client__main_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;TERF&quot;</emphasis>]&#32;=&#32;v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a7930ab296d19b6d7217ae1acf09229f3">terf</link>;
<anchor xml:id="_client__main_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;TERL&quot;</emphasis>]&#32;=&#32;v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a04f17c6355d8722524757604afadae94">terl</link>;
<anchor xml:id="_client__main_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;GUID&quot;</emphasis>]&#32;=&#32;std::string(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8">guid</link>);
<anchor xml:id="_client__main_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;PID&quot;</emphasis>]&#32;=&#32;std::string(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700">pid</link>);
<anchor xml:id="_client__main_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;AID&quot;</emphasis>]&#32;=&#32;std::string(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9">aid</link>);
<anchor xml:id="_client__main_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;CABX&quot;</emphasis>]&#32;=&#32;std::string(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172">cabx</link>);
<anchor xml:id="_client__main_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;json_msg[<emphasis role="stringliteral">&quot;MSG&quot;</emphasis>]&#32;=&#32;msg;
<anchor xml:id="_client__main_8cpp_source_1l00054"/>00054 }
<anchor xml:id="_client__main_8cpp_source_1l00055"/>00055 
<anchor xml:id="_client__main_8cpp_source_1l00056"/><link linkend="_client__main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00056</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_client__main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()
<anchor xml:id="_client__main_8cpp_source_1l00057"/>00057 {
<anchor xml:id="_client__main_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TO&#32;DO&#32;</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;level&#32;of&#32;log&#32;from&#32;file&#32;config.&#32;Now&#32;it&#32;is&#32;only&#32;DEBUG.</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;plog::ConsoleAppender&lt;plog::TxtFormatter&gt;&#32;consoleAppender;
<anchor xml:id="_client__main_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>=plog::verbose;
<anchor xml:id="_client__main_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;plog::init(plog::verbose,&#32;&amp;consoleAppender);
<anchor xml:id="_client__main_8cpp_source_1l00063"/>00063 
<anchor xml:id="_client__main_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;v_protomsg;
<anchor xml:id="_client__main_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;std::string&#32;msg_to_send,&#32;msgout;
<anchor xml:id="_client__main_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;Json::Value&#32;json_msg;
<anchor xml:id="_client__main_8cpp_source_1l00067"/>00067 
<anchor xml:id="_client__main_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;CLIENT_main&#32;START!!&quot;</emphasis>;
<anchor xml:id="_client__main_8cpp_source_1l00069"/>00069 
<anchor xml:id="_client__main_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;previousInterruptHandler_int&#32;=&#32;signal(SIGINT,&#32;<link linkend="_client__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>);
<anchor xml:id="_client__main_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;previousInterruptHandler_usr1&#32;=&#32;signal(SIGUSR1,&#32;<link linkend="_client__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>);
<anchor xml:id="_client__main_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;previousInterruptHandler_term&#32;=&#32;signal(SIGTERM,&#32;<link linkend="_client__main_8cpp_1a5cdc13615c23187d16e4834c15d054e0">sigterm_func</link>);
<anchor xml:id="_client__main_8cpp_source_1l00073"/>00073 
<anchor xml:id="_client__main_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;ip&#32;=&#32;<link linkend="_classSocket_1a49b6d9bbc776522388ce7c13d3a0ac57">Socket::ipFromHostName</link>(<emphasis role="stringliteral">&quot;localhost&quot;</emphasis>);&#32;<emphasis role="comment">//Get&#32;ip&#32;addres&#32;from&#32;hostname</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;port&#32;=&#32;<emphasis role="stringliteral">&quot;9000&quot;</emphasis>;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="_classSocket">Socket</link>&#32;*sock&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classSocket">Socket</link>(AF_INET,SOCK_STREAM,0);&#32;&#32;<emphasis role="comment">//AF_INET&#32;(Internet&#32;mode)&#32;SOCK_STREAM&#32;(TCP&#32;mode)&#32;0&#32;(Protocol&#32;any)</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00077"/>00077 
<anchor xml:id="_client__main_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;sock-&gt;<link linkend="_classSocket_1ac57cbd359ac6c4c731dbcebebfc6af5c">connect</link>(ip,&#32;port);&#32;<emphasis role="comment">//Connect&#32;to&#32;localhost</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00079"/>00079 
<anchor xml:id="_client__main_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;msg_to_send&#32;=&#32;<emphasis role="stringliteral">&quot;Well,&#32;this&#32;is&#32;the&#32;first&#32;message&#32;going&#32;and&#32;coming.&quot;</emphasis>;
<anchor xml:id="_client__main_8cpp_source_1l00081"/>00081 
<anchor xml:id="_client__main_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a7930ab296d19b6d7217ae1acf09229f3">terf</link>&#32;=&#32;1000;
<anchor xml:id="_client__main_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a04f17c6355d8722524757604afadae94">terl</link>&#32;=&#32;3000;
<anchor xml:id="_client__main_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;strcpy(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a205b604a6bed38195230067ede131ec8">guid</link>,<emphasis role="stringliteral">&quot;SOMEGUID&quot;</emphasis>);
<anchor xml:id="_client__main_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;strcpy(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a91601b868d6a43ab884fdcc028615700">pid</link>,&#32;<emphasis role="stringliteral">&quot;somepid&quot;</emphasis>);
<anchor xml:id="_client__main_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;strcpy(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1ac122e203520778ab49f551db9d6de1b9">aid</link>,&#32;<emphasis role="stringliteral">&quot;400200&quot;</emphasis>);
<anchor xml:id="_client__main_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;strcpy(v_protomsg.<link linkend="_structprotomsg_1_1st__protomsg_1a87c793980e82b795427b08498c4b6172">cabx</link>,<emphasis role="stringliteral">&quot;400201&quot;</emphasis>);
<anchor xml:id="_client__main_8cpp_source_1l00088"/>00088 
<anchor xml:id="_client__main_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<link linkend="_client__main_8cpp_1a601b647decf34eb2826ae82ebe2ea155">Prepare_Msg_Json_To_Send</link>(v_protomsg,&#32;msg_to_send,&#32;json_msg);
<anchor xml:id="_client__main_8cpp_source_1l00090"/>00090 
<anchor xml:id="_client__main_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;stringstream&#32;ss;
<anchor xml:id="_client__main_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;field;
<anchor xml:id="_client__main_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;ss&#32;&lt;&lt;&#32;json_msg;
<anchor xml:id="_client__main_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(getline(ss,&#32;field))&#32;&#32;<emphasis role="comment">//&#32;Cortamos&#32;campos&#32;...</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msgout&#32;+=&#32;field;
<anchor xml:id="_client__main_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Sending&#32;msgout:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msgout;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;sock-&gt;<link linkend="_classSocket_1a564eb3f48d8cb31423076e68f8cc1f54">socket_write</link>(msgout);
<anchor xml:id="_client__main_8cpp_source_1l00103"/>00103 
<anchor xml:id="_client__main_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;seconds&#32;=&#32;10;<emphasis role="comment">//Wait&#32;10&#32;second&#32;for&#32;response</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00105"/>00105 
<anchor xml:id="_client__main_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;vector&lt;Socket&gt;&#32;reads(1);
<anchor xml:id="_client__main_8cpp_source_1l00107"/>00107 
<anchor xml:id="_client__main_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;reads[0]&#32;=&#32;*sock;
<anchor xml:id="_client__main_8cpp_source_1l00109"/>00109 
<anchor xml:id="_client__main_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//Socket::select&#32;waits&#32;until&#32;sock&#32;reveives&#32;some&#32;input&#32;(for&#32;example&#32;the&#32;answer&#32;from&#32;google.com)</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(sock-&gt;<link linkend="_classSocket_1a8078f3895616b76dae6367e765bc5744">select</link>(&amp;reads,&#32;NULL,&#32;NULL,&#32;seconds)&#32;&lt;&#32;1)
<anchor xml:id="_client__main_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;{
<anchor xml:id="_client__main_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Something&#32;went&#32;wrong</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error&#32;on&#32;select:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;errno&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_client__main_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="_client__main_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;{
<anchor xml:id="_client__main_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;buffer;
<anchor xml:id="_client__main_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sock-&gt;<link linkend="_classSocket_1ad7b9a7832dc2384d4f899afd73cb1193">socket_read</link>(buffer,&#32;2048);<emphasis role="comment">//Read&#32;1024&#32;bytes&#32;of&#32;the&#32;answer</emphasis>
<anchor xml:id="_client__main_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Response:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;buffer;
<anchor xml:id="_client__main_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="_client__main_8cpp_source_1l00122"/>00122 
<anchor xml:id="_client__main_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Ending&#32;CLIENT_main&quot;</emphasis>;
<anchor xml:id="_client__main_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;
<anchor xml:id="_client__main_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;(void)signal(SIGINT,&#32;previousInterruptHandler_int);
<anchor xml:id="_client__main_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;(void)signal(SIGUSR1,&#32;previousInterruptHandler_usr1);
<anchor xml:id="_client__main_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;(void)signal(SIGTERM,&#32;previousInterruptHandler_term);
<anchor xml:id="_client__main_8cpp_source_1l00128"/>00128 
<anchor xml:id="_client__main_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_client__main_8cpp_source_1l00130"/>00130 }
</programlisting></section>
