<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ipclib_8cpp_source" xml:lang="en-US">
<title>ipclib.cpp</title>
<indexterm><primary>src/ipclib.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_ipclib_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ipclib_8h">ipclib.h</link>&quot;</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00002"/>00002 
<anchor xml:id="_ipclib_8cpp_source_1l00003"/>00003 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_ipclib_8cpp_source_1l00004"/>00004 
<anchor xml:id="_ipclib_8cpp_source_1l00005"/><link linkend="_classSemaphore_1a2b7db06c733cdc2d3599d65e1abcf29d">00005</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classSemaphore_1a2b7db06c733cdc2d3599d65e1abcf29d">Semaphore::get_stat</link>(<emphasis role="keywordtype">int</emphasis>&#32;semid)
<anchor xml:id="_ipclib_8cpp_source_1l00006"/>00006 {
<anchor xml:id="_ipclib_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;semctl(semid,&#32;0,&#32;IPC_STAT,&#32;<link linkend="_classSemaphore_1a6960ae0ae5ae957ed1a2fe10e8eb8336">_st</link>);
<anchor xml:id="_ipclib_8cpp_source_1l00008"/>00008 }
<anchor xml:id="_ipclib_8cpp_source_1l00009"/>00009 
<anchor xml:id="_ipclib_8cpp_source_1l00010"/><link linkend="_classSemaphore_1a4b0766bfb19b1cc2f8fddc88859014c1">00010</link> <link linkend="_classSemaphore_1a98e1ac90faefeb68a6a5a1b08f8a0470">Semaphore::Semaphore</link>(<emphasis role="keywordtype">int</emphasis>&#32;semid):<link linkend="_classIpc">Ipc</link>{IPC_PRIVATE,false}
<anchor xml:id="_ipclib_8cpp_source_1l00011"/>00011 {
<anchor xml:id="_ipclib_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classSemaphore_1a2b7db06c733cdc2d3599d65e1abcf29d">get_stat</link>(semid)&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;semctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(semid);
<anchor xml:id="_ipclib_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(<link linkend="_classSemaphore_1a6960ae0ae5ae957ed1a2fe10e8eb8336">_st</link>.<link linkend="_unionsemun_1ac6b6428d07d4147fd2cc698b53555bed">buf</link>-&gt;sem_perm.mode);
<anchor xml:id="_ipclib_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(<link linkend="_classSemaphore_1a6960ae0ae5ae957ed1a2fe10e8eb8336">_st</link>.<link linkend="_unionsemun_1ac6b6428d07d4147fd2cc698b53555bed">buf</link>-&gt;sem_perm.__key);
<anchor xml:id="_ipclib_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a0636c10df48f7a1045fa2936e8db0525">_nsems</link>&#32;=&#32;<link linkend="_classSemaphore_1a6960ae0ae5ae957ed1a2fe10e8eb8336">_st</link>.<link linkend="_unionsemun_1ac6b6428d07d4147fd2cc698b53555bed">buf</link>-&gt;sem_nsems;
<anchor xml:id="_ipclib_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a11050ec50c4b972ac7277ebe6bcac953">_sem_val</link>.clear();
<anchor xml:id="_ipclib_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a11050ec50c4b972ac7277ebe6bcac953">_sem_val</link>.reserve(<link linkend="_classSemaphore_1a0636c10df48f7a1045fa2936e8db0525">_nsems</link>);
<anchor xml:id="_ipclib_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sem_val;
<anchor xml:id="_ipclib_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&#32;&lt;&#32;<link linkend="_classSemaphore_1a0636c10df48f7a1045fa2936e8db0525">_nsems</link>;&#32;i++)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((sem_val&#32;=&#32;semctl(semid,i,GETVAL))&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;init&#32;queue&#32;semaphore&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a11050ec50c4b972ac7277ebe6bcac953">_sem_val</link>.clear();
<anchor xml:id="_ipclib_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a11050ec50c4b972ac7277ebe6bcac953">_sem_val</link>.emplace_back(sem_val);
<anchor xml:id="_ipclib_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00039"/>00039 }
<anchor xml:id="_ipclib_8cpp_source_1l00040"/>00040 
<anchor xml:id="_ipclib_8cpp_source_1l00041"/><link linkend="_classSemaphore_1ab70042f19c0201b877d31b483252684d">00041</link> <link linkend="_classSemaphore_1a98e1ac90faefeb68a6a5a1b08f8a0470">Semaphore::Semaphore</link>(<emphasis role="keyword">const</emphasis>&#32;key_t&#32;key,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nsems,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sem_val,&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;deleteOnExit):
<anchor xml:id="_ipclib_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc">Ipc</link>{key,deleteOnExit}
<anchor xml:id="_ipclib_8cpp_source_1l00043"/>00043 {
<anchor xml:id="_ipclib_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flags&#32;=&#32;<link linkend="_classIpc_1a4b2e0e102d3e0991129b0fc3a511e1e6">getflags</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;semget(key,nsems,flags);
<anchor xml:id="_ipclib_8cpp_source_1l00046"/>00046 
<anchor xml:id="_ipclib_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;semget&#32;fail!&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(errno)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOENT:
<anchor xml:id="_ipclib_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;IPC_CREAT&#32;|&#32;IPC_EXCL&#32;|&#32;0666;
<anchor xml:id="_ipclib_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">id</emphasis>&#32;=&#32;semget(key,nsems,flags))&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;semget:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nsems;&#32;i++)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(semctl(<emphasis role="keywordtype">id</emphasis>,i,SETVAL,sem_val))&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;init&#32;queue&#32;semaphore&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Semaphore&#32;created!&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00066"/>00066 
<anchor xml:id="_ipclib_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EINVAL:&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;EINVAL:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EACCES:&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;EACCES:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ENOSPC:&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;ENOSPC:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EEXIST:&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;EEXIST:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(key&#32;==&#32;IPC_PRIVATE)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nsems;&#32;i++)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(semctl(<emphasis role="keywordtype">id</emphasis>,i,SETVAL,sem_val))&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;init&#32;queue&#32;semaphore&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Semaphore&#32;adquired:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00087"/>00087 
<anchor xml:id="_ipclib_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(flags);
<anchor xml:id="_ipclib_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(key);
<anchor xml:id="_ipclib_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a11050ec50c4b972ac7277ebe6bcac953">_sem_val</link>.assign(nsems,sem_val);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;7&#32;ints&#32;with&#32;a&#32;value&#32;of&#32;100</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a0636c10df48f7a1045fa2936e8db0525">_nsems</link>&#32;=&#32;nsems;
<anchor xml:id="_ipclib_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00096"/>00096 }
<anchor xml:id="_ipclib_8cpp_source_1l00097"/>00097 
<anchor xml:id="_ipclib_8cpp_source_1l00098"/><link linkend="_classSemaphore_1a4849ad52709d27304b2224df375a4d0f">00098</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classSemaphore_1a4849ad52709d27304b2224df375a4d0f">Semaphore::set</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;op)
<anchor xml:id="_ipclib_8cpp_source_1l00099"/>00099 {
<anchor xml:id="_ipclib_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a22eb2db89917021918af8af6c48762c7">_sop</link>.sem_num&#32;=&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a22eb2db89917021918af8af6c48762c7">_sop</link>.sem_op&#32;=&#32;op;
<anchor xml:id="_ipclib_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSemaphore_1a22eb2db89917021918af8af6c48762c7">_sop</link>.sem_flg&#32;=&#32;SEM_UNDO;
<anchor xml:id="_ipclib_8cpp_source_1l00105"/>00105 
<anchor xml:id="_ipclib_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errno&#32;=&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(semop&#32;(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;&amp;<link linkend="_classSemaphore_1a22eb2db89917021918af8af6c48762c7">_sop</link>,&#32;1)&#32;==&#32;-1)
<anchor xml:id="_ipclib_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(EINTR&#32;==&#32;errno)
<anchor xml:id="_ipclib_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errno&#32;=&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;semop:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_ipclib_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_ipclib_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_ipclib_8cpp_source_1l00123"/>00123 }
<anchor xml:id="_ipclib_8cpp_source_1l00124"/>00124 
<anchor xml:id="_ipclib_8cpp_source_1l00125"/><link linkend="_classSemaphore_1a633658a6fde276bffc912028725c6ade">00125</link> <link linkend="_classSemaphore_1a633658a6fde276bffc912028725c6ade">Semaphore::~Semaphore</link>()
<anchor xml:id="_ipclib_8cpp_source_1l00126"/>00126 {
<anchor xml:id="_ipclib_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_classIpc_1a7faa2e8471f51b76efc446ea9330c49c">getDeleteOnExit</link>())
<anchor xml:id="_ipclib_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Removing&#32;semaphore&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(semctl&#32;(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;0,&#32;IPC_RMID)&#32;==&#32;-1)
<anchor xml:id="_ipclib_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;semctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00138"/>00138 }
<anchor xml:id="_ipclib_8cpp_source_1l00139"/>00139 
<anchor xml:id="_ipclib_8cpp_source_1l00140"/><link linkend="_classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6">00140</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6">SharedMemory::get_stat</link>(<emphasis role="keywordtype">int</emphasis>&#32;shmid)
<anchor xml:id="_ipclib_8cpp_source_1l00141"/>00141 {
<anchor xml:id="_ipclib_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;shmctl(shmid,&#32;IPC_STAT,&#32;&amp;<link linkend="_classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000">_st</link>);
<anchor xml:id="_ipclib_8cpp_source_1l00143"/>00143 }
<anchor xml:id="_ipclib_8cpp_source_1l00144"/>00144 
<anchor xml:id="_ipclib_8cpp_source_1l00145"/><link linkend="_classSharedMemory_1a400bd582aa803162fed6b241f784a1fa">00145</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classSharedMemory_1a400bd582aa803162fed6b241f784a1fa">SharedMemory::get_nattach</link>()
<anchor xml:id="_ipclib_8cpp_source_1l00146"/>00146 {
<anchor xml:id="_ipclib_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6">get_stat</link>(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>())&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_ipclib_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000">_st</link>.shm_nattch);
<anchor xml:id="_ipclib_8cpp_source_1l00153"/>00153 }
<anchor xml:id="_ipclib_8cpp_source_1l00154"/>00154 
<anchor xml:id="_ipclib_8cpp_source_1l00155"/><link linkend="_classSharedMemory_1adbbf800cc0d7ac89fdc7372c2755b4f4">00155</link> <link linkend="_classSharedMemory_1a851a8d425f9c1e6f49237efd97628df5">SharedMemory::SharedMemory</link>(<emphasis role="keywordtype">int</emphasis>&#32;shmid):<link linkend="_classIpc">Ipc</link>{IPC_PRIVATE,false}
<anchor xml:id="_ipclib_8cpp_source_1l00156"/>00156 {
<anchor xml:id="_ipclib_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classSharedMemory_1a4db4a79d92eb5c05e7d326a38905ffb6">get_stat</link>(shmid)&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d">_shmaddr</link>&#32;=&#32;shmat(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;NULL,&#32;0))&#32;==&#32;NULL)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmat:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//PLOG_DEBUG_IF(loglevel)&#32;&lt;&lt;&#32;&quot;SharedMemory&#32;Ctor&#32;getid()&#32;&quot;&#32;&lt;&lt;&#32;getid()&#32;&lt;&lt;&#32;&quot;&#32;_flags&#32;&quot;&#32;&lt;&lt;&#32;_flags&#32;&lt;&lt;&#32;&quot;&#32;_size&#32;&quot;&#32;&lt;&lt;&#32;_size;</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(shmid);
<anchor xml:id="_ipclib_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(<link linkend="_classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000">_st</link>.shm_perm.mode);
<anchor xml:id="_ipclib_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(<link linkend="_classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000">_st</link>.shm_perm.__key);
<anchor xml:id="_ipclib_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classSharedMemory_1a2705b16bf1af906e68824582dd849e69">_size</link>&#32;=&#32;<link linkend="_classSharedMemory_1aba9e372e4dd92be2109ddb36e51c3000">_st</link>.shm_segsz;
<anchor xml:id="_ipclib_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00178"/>00178 }
<anchor xml:id="_ipclib_8cpp_source_1l00179"/>00179 
<anchor xml:id="_ipclib_8cpp_source_1l00180"/>00180 
<anchor xml:id="_ipclib_8cpp_source_1l00181"/><link linkend="_classSharedMemory_1aa0c0f01a0d79e3e806f93fd71a3a69f9">00181</link> <link linkend="_classSharedMemory_1a851a8d425f9c1e6f49237efd97628df5">SharedMemory::SharedMemory</link>(<emphasis role="keyword">const</emphasis>&#32;key_t&#32;key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,<emphasis role="keywordtype">bool</emphasis>&#32;deleteOnExit):
<anchor xml:id="_ipclib_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc">Ipc</link>{key,deleteOnExit}
<anchor xml:id="_ipclib_8cpp_source_1l00183"/>00183 {
<anchor xml:id="_ipclib_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flags&#32;=&#32;<link linkend="_classIpc_1a4b2e0e102d3e0991129b0fc3a511e1e6">getflags</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;shmget(key,&#32;size,&#32;flags);
<anchor xml:id="_ipclib_8cpp_source_1l00186"/>00186 
<anchor xml:id="_ipclib_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<emphasis role="keywordtype">id</emphasis>&#32;&#32;&lt;&#32;0)
<anchor xml:id="_ipclib_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errno&#32;==&#32;ENOENT)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;IPC_CREAT;
<anchor xml:id="_ipclib_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;shmget(key,&#32;size,&#32;flags);
<anchor xml:id="_ipclib_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmget:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00205"/>00205 
<anchor xml:id="_ipclib_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(flags);
<anchor xml:id="_ipclib_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(key);
<anchor xml:id="_ipclib_8cpp_source_1l00211"/>00211 
<anchor xml:id="_ipclib_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d">_shmaddr</link>&#32;=&#32;shmat(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;NULL,&#32;0))&#32;==&#32;NULL)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmat:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;SharedMemory&#32;Created&#32;&amp;&#32;Attached:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00219"/>00219 }
<anchor xml:id="_ipclib_8cpp_source_1l00220"/>00220 
<anchor xml:id="_ipclib_8cpp_source_1l00221"/><link linkend="_classSharedMemory_1adc56751ce1b30224689e71cd3b6c09be">00221</link> <link linkend="_classSharedMemory_1adc56751ce1b30224689e71cd3b6c09be">SharedMemory::~SharedMemory</link>()
<anchor xml:id="_ipclib_8cpp_source_1l00222"/>00222 {
<anchor xml:id="_ipclib_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>&#32;&amp;&amp;&#32;<link linkend="_classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d">_shmaddr</link>)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_classIpc_1a7faa2e8471f51b76efc446ea9330c49c">getDeleteOnExit</link>())
<anchor xml:id="_ipclib_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Detaching&#32;SharedMemory&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00228"/>00228 
<anchor xml:id="_ipclib_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shmdt(<link linkend="_classSharedMemory_1a7ca4a292828eea29e3fec0cbee0ff84d">_shmaddr</link>)==-1)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmdt:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Removing&#32;SharedMemory&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shmctl(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),IPC_RMID,0))&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;shmctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00243"/>00243 
<anchor xml:id="_ipclib_8cpp_source_1l00244"/>00244 }
<anchor xml:id="_ipclib_8cpp_source_1l00245"/>00245 
<anchor xml:id="_ipclib_8cpp_source_1l00246"/><link linkend="_classMessageQueue_1af553c98265b870662d63b92c53833191">00246</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classMessageQueue_1af553c98265b870662d63b92c53833191">MessageQueue::get_stat</link>(<emphasis role="keywordtype">int</emphasis>&#32;msgid)
<anchor xml:id="_ipclib_8cpp_source_1l00247"/>00247 {
<anchor xml:id="_ipclib_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;msgctl(msgid,&#32;IPC_STAT,&#32;&amp;<link linkend="_classMessageQueue_1addf9d13122b5988bfde8e8840b0c79c0">_st</link>);
<anchor xml:id="_ipclib_8cpp_source_1l00249"/>00249 }
<anchor xml:id="_ipclib_8cpp_source_1l00250"/>00250 
<anchor xml:id="_ipclib_8cpp_source_1l00251"/><link linkend="_classMessageQueue_1aec2a8525f943a2233ec985007045d54f">00251</link> <link linkend="_classMessageQueue_1a8662eead8fd2732f4cb68d23b89431c3">MessageQueue::MessageQueue</link>(<emphasis role="keywordtype">int</emphasis>&#32;msgid):<link linkend="_classIpc">Ipc</link>{IPC_PRIVATE,false}
<anchor xml:id="_ipclib_8cpp_source_1l00252"/>00252 {
<anchor xml:id="_ipclib_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_classMessageQueue_1af553c98265b870662d63b92c53833191">get_stat</link>(msgid)&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(msgid);
<anchor xml:id="_ipclib_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(<link linkend="_classMessageQueue_1addf9d13122b5988bfde8e8840b0c79c0">_st</link>.msg_perm.mode);
<anchor xml:id="_ipclib_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(<link linkend="_classMessageQueue_1addf9d13122b5988bfde8e8840b0c79c0">_st</link>.msg_perm.__key);
<anchor xml:id="_ipclib_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classMessageQueue_1a77feb6edf381eedb2f466303fc6ca3c3">_size</link>&#32;=&#32;<link linkend="_classMessageQueue_1addf9d13122b5988bfde8e8840b0c79c0">_st</link>.msg_qbytes;
<anchor xml:id="_ipclib_8cpp_source_1l00264"/>00264 
<anchor xml:id="_ipclib_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PLOG_DEBUG_IF(loglevel)&#32;&lt;&lt;&#32;&quot;MessageQueue&#32;connected&#32;getid()&#32;&quot;&#32;&lt;&lt;&#32;getid()&#32;&lt;&lt;&#32;&quot;&#32;_flags&#32;&quot;&#32;&lt;&lt;&#32;_flags&#32;&lt;&lt;&#32;&quot;&#32;_size&#32;&quot;&#32;&lt;&lt;&#32;_size;</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00267"/>00267 }
<anchor xml:id="_ipclib_8cpp_source_1l00268"/>00268 
<anchor xml:id="_ipclib_8cpp_source_1l00269"/><link linkend="_classMessageQueue_1ac3138a4b8f10868f1df70519257fa45f">00269</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classMessageQueue_1ac3138a4b8f10868f1df70519257fa45f">MessageQueue::send</link>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;*p_protomsg,&#32;std::string&#32;&amp;pdata)
<anchor xml:id="_ipclib_8cpp_source_1l00270"/>00270 {
<anchor xml:id="_ipclib_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbytes&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>)+pdata.size();
<anchor xml:id="_ipclib_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unique_ptr&lt;protomsg::st_protomsg&gt;&#32;p_qmsg2((<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>*)&#32;::operator&#32;<emphasis role="keyword">new</emphasis>&#32;(nbytes));
<anchor xml:id="_ipclib_8cpp_source_1l00275"/>00275 
<anchor xml:id="_ipclib_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(p_qmsg2.get(),&#32;p_protomsg,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>));
<anchor xml:id="_ipclib_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy(p_qmsg2-&gt;msg,&#32;pdata.c_str());
<anchor xml:id="_ipclib_8cpp_source_1l00278"/>00278 
<anchor xml:id="_ipclib_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msgsnd(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>&#32;*<emphasis role="keyword">&gt;</emphasis>(p_qmsg2.get()),&#32;nbytes&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>),&#32;0)&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgsnd:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_ipclib_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;send:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;NOT&#32;OK!!&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00292"/>00292 }
<anchor xml:id="_ipclib_8cpp_source_1l00293"/>00293 
<anchor xml:id="_ipclib_8cpp_source_1l00294"/><link linkend="_classMessageQueue_1ae4afb1b560697ce2a0bd8a0b5bca8f21">00294</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classMessageQueue_1ae4afb1b560697ce2a0bd8a0b5bca8f21">MessageQueue::rcv</link>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;*p_protomsg,&#32;std::string&#32;&amp;pdata)
<anchor xml:id="_ipclib_8cpp_source_1l00295"/>00295 {
<anchor xml:id="_ipclib_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;msgbytes;
<anchor xml:id="_ipclib_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unique_ptr&lt;protomsg::st_protomsg&gt;&#32;p_qmsg2((<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>*)&#32;::operator&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>)+<link linkend="_namespaceprotomsg_1a4a0f2114518a11deffeeb33541faa41c">protomsg::MAX_MSG_SIZE</link>));
<anchor xml:id="_ipclib_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>&#32;*p=&#32;p_qmsg2.get();
<anchor xml:id="_ipclib_8cpp_source_1l00301"/>00301 
<anchor xml:id="_ipclib_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((msgbytes&#32;=&#32;msgrcv(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;p,&#32;<link linkend="_namespaceprotomsg_1a4a0f2114518a11deffeeb33541faa41c">protomsg::MAX_MSG_SIZE</link>&#32;,&#32;0,&#32;0))&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgrcv:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msg(&quot;</emphasis>&#32;&lt;&lt;&#32;msgbytes&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;):&quot;</emphasis>&#32;&lt;&lt;&#32;p_qmsg2-&gt;msg&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(p_protomsg,&#32;p,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structprotomsg_1_1st__protomsg">protomsg::st_protomsg</link>)-1);
<anchor xml:id="_ipclib_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pdata&#32;=&#32;std::string(p-&gt;<link linkend="_structprotomsg_1_1st__protomsg_1aa2b9f791b1d3114a7ff0dd875144579e">msg</link>);
<anchor xml:id="_ipclib_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_ipclib_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;send:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;NOT&#32;OK!!&quot;</emphasis>;
<anchor xml:id="_ipclib_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_ipclib_8cpp_source_1l00318"/>00318 }
<anchor xml:id="_ipclib_8cpp_source_1l00319"/>00319 
<anchor xml:id="_ipclib_8cpp_source_1l00320"/><link linkend="_classMessageQueue_1aa1a5814c7a2e8c2ce6c6734ebd9f07ed">00320</link> <link linkend="_classMessageQueue_1a8662eead8fd2732f4cb68d23b89431c3">MessageQueue::MessageQueue</link>(<emphasis role="keyword">const</emphasis>&#32;key_t&#32;key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;deleteOnExit):
<anchor xml:id="_ipclib_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc">Ipc</link>{key,deleteOnExit}
<anchor xml:id="_ipclib_8cpp_source_1l00322"/>00322 {
<anchor xml:id="_ipclib_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>msqid_ds&#32;qstatus;
<anchor xml:id="_ipclib_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flags=<link linkend="_classIpc_1a4b2e0e102d3e0991129b0fc3a511e1e6">getflags</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;msgget(key,flags);
<anchor xml:id="_ipclib_8cpp_source_1l00326"/>00326 
<anchor xml:id="_ipclib_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;&lt;&#32;0)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errno&#32;==&#32;ENOENT)&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;IPC_CREAT;
<anchor xml:id="_ipclib_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">id</emphasis>&#32;=&#32;msgget(key,flags))&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgget:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno);
<anchor xml:id="_ipclib_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msgctl(<emphasis role="keywordtype">id</emphasis>,IPC_STAT,&amp;qstatus)&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgctl&#32;IPC_STAT:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msg_qbytes:&quot;</emphasis>&#32;&lt;&lt;&#32;qstatus.msg_qbytes;
<anchor xml:id="_ipclib_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_ipclib_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgget:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="_ipclib_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1aecac89b3a9bdec9833092579712e7cfe">setok</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;MessageQueue&#32;Created:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00354"/>00354 
<anchor xml:id="_ipclib_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a80dbed0a4e45a95d04bfe8d432c50d19">setid</link>(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_ipclib_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a9f5e7d9248966affeff2533ebf17f060">setflags</link>(flags);
<anchor xml:id="_ipclib_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classIpc_1a042476ca5bce7de73d906b7413922586">setkey</link>(key);
<anchor xml:id="_ipclib_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00361"/>00361 }
<anchor xml:id="_ipclib_8cpp_source_1l00362"/>00362 
<anchor xml:id="_ipclib_8cpp_source_1l00363"/><link linkend="_classMessageQueue_1a3640a8a6140801f1e127a41e60c014dd">00363</link> <link linkend="_classMessageQueue_1a3640a8a6140801f1e127a41e60c014dd">MessageQueue::~MessageQueue</link>()
<anchor xml:id="_ipclib_8cpp_source_1l00364"/>00364 {
<anchor xml:id="_ipclib_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<emphasis role="keyword">this</emphasis>)
<anchor xml:id="_ipclib_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_classIpc_1a7faa2e8471f51b76efc446ea9330c49c">getDeleteOnExit</link>())
<anchor xml:id="_ipclib_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Removing&#32;MessageQueue&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msgctl(<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>(),0,IPC_RMID))
<anchor xml:id="_ipclib_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_ipclib_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOG_ERROR&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;msgctl:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;strerror(errno)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_classIpc_1a3e50666a681532a44ed32a283e8e2979">getid</link>();
<anchor xml:id="_ipclib_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ipclib_8cpp_source_1l00376"/>00376 }
</programlisting></section>
