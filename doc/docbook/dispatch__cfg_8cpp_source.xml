<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dispatch__cfg_8cpp_source" xml:lang="en-US">
<title>dispatch_cfg.cpp</title>
<indexterm><primary>src/dispatch_cfg.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_dispatch__cfg_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_dispatch__cfg_8h">dispatch_cfg.h</link>&quot;</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00002"/>00002 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00003"/>00003 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00004"/>00004 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00005"/><link linkend="_classall__dispatch__cfg_1a35d710c743e646189b71a791e86486af">00005</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a35d710c743e646189b71a791e86486af">all_dispatch_cfg::load_all_info</link>()
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00006"/>00006 {
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_disp&#32;=&#32;<link linkend="_classall__dispatch__cfg_1a6c396082d3d091ffcaf17d13b408acd5">getNumDispatchers</link>();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;PLOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;dispatchers&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;num_disp;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00010"/>00010 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=1;&#32;i&#32;&lt;&#32;(num_disp+1);&#32;i++)&#32;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;dispatchXX;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00014"/>00014 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&lt;10)
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatchXX=string(<emphasis role="stringliteral">&quot;dispatch0&quot;</emphasis>)&#32;+&#32;to_string(i);
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatchXX=string(<emphasis role="stringliteral">&quot;dispatch&quot;</emphasis>)&#32;+&#32;to_string(i);
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00019"/>00019 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;IP=<link linkend="_classall__dispatch__cfg_1a8e640b60b9b882c88fcd5ff5c8b514ee">getDispatcherXX_IP</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;Port=<link linkend="_classall__dispatch__cfg_1adea1daf1bde449c40f93a11ad38297be">getDispatcherXX_Port</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;NumThreads=<link linkend="_classall__dispatch__cfg_1a1378ca64565176db1546847972a0b4c1">getDispatcherXX_NumThreads</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;TuxCliProg=<link linkend="_classall__dispatch__cfg_1aa1ed0af52a95019527159b09a42a16b2">getDispatcherXX_TuxCliProg</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;TuxCliSetup=<link linkend="_classall__dispatch__cfg_1af189902c9c223a698b64ee34bdc53a1c">getDispatcherXX_TuxCliSetup</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;LogLevel=<link linkend="_classall__dispatch__cfg_1ad1c57b8c24055cc6c0372c358f16745e">getDispatcherXX_LogLevel</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;MaxConnections=<link linkend="_classall__dispatch__cfg_1a7a3abf92793526b5e0c053e864f881e0">getDispatcherXX_MaxConnections</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;StopTimeout=<link linkend="_classall__dispatch__cfg_1a692f455b0d88f54bb1ac7a8bb357cd6e">getDispatcherXX_StopTimeout</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;IpcFile=<link linkend="_classall__dispatch__cfg_1ab1bca3e1fccdd0cbc6690519ac8d6e6f">getDispatcherXX_IpcFile</link>(dispatchXX.c_str());
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structdispatch__cfg">dispatch_cfg</link>&#32;d={i,IP,Port,NumThreads,TuxCliProg,TuxCliSetup,LogLevel,MaxConnections,StopTimeout,IpcFile};
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a84709c1960ff66d7e3abdaf3b960ee64">dispatchers_cfg</link>.emplace_back(d);
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Processed&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;num_disp;&#32;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1aa8573e903e001b80d3056856a8656b74">loaded</link>=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a89a062ab90a459456c78a36eccf048f8">NumDispatchers</link>&#32;=&#32;i;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00035"/>00035 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00036"/>00036 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00037"/>00037 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00038"/><link linkend="_classall__dispatch__cfg_1af268e755413b6d473f766d54142195d9">00038</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1af268e755413b6d473f766d54142195d9">all_dispatch_cfg::create_cfg_values</link>(<emphasis role="keywordtype">string</emphasis>&#32;file_dir)
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00039"/>00039 {
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;PLOG_DEBUG_IF(<link linkend="_client__main_8cpp_1afb19b851dbcd1447c226a8a98c26979d">loglevel</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Creating&#32;config&#32;file...&quot;</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>.clear();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatch01{<emphasis role="stringliteral">&quot;dispatch01&quot;</emphasis>};
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//auto&#32;const&#32;dispatch01&#32;=&#32;&quot;dispatch01&quot;;</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00044"/>00044 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[<link linkend="_dispatch__cfg_8h_1a78b1f1b0287e42f795966734ad94ad90">FIELD_NOTE</link>]&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;Default&#32;Configuration&#32;File&#32;(auto-created)&quot;</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[<link linkend="_dispatch__cfg_8h_1a9c8e880c30c0ac74f885886a182d6a46">FIELD_VERSION</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1ae84e712302e675b44e9975ef130a94ba">CFGFILE_VERSION</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[<link linkend="_dispatch__cfg_8h_1a93651f1f2383dd22cb5ef16648936b9b">FIELD_NUMDISPATCHERS</link>]&#32;=&#32;1;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1aae0421734ae2563add92370a27da94b7">FIELD_IP</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1ab8896f36952d9a28d2768738bde32cca">DEFAULT_IP</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1a09518cacb2ba79ce9069c6f72364c54c">FIELD_PORT</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1ac9658aed853e1af75285506d7046124d">DEFAULT_PORT</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1a4f86f4b170059cd34784d20488d7b6d2">FIELD_NUMTHREADS</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1ac378a7cd42df8dca4a7b0481755da598">DEFAULT_NUMTHREADS</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1a5028d36bcf2fbacfde229572d2bbe6a5">FIELD_TUXCLIPROG</link>]&#32;=&#32;file_dir&#32;+&#32;<link linkend="_dispatch__cfg_8h_1a9f974a874bb95a44f1a9c6115be5f184">DEFAULT_TUXCLIPROG</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1ad28874272a0ef2432acb84ddc50587bc">FIELD_TUXCLISETUP</link>]&#32;=&#32;file_dir&#32;+&#32;<link linkend="_dispatch__cfg_8h_1a58f06dd5eabdaf53211d08398d44bbed">DEFAULT_TUXCLISETUP</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1af2ad0370e820b513045b182c51bb4301">FIELD_LOGLEVEL</link>]&#32;=&#32;plog::warning;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1a3cea144ec5bbaf5a6fba9973912d3137">FIELD_MAXCONN</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1acb49fc360f501ffff3281abe6706ca0f">DEFAULT_MAXCONN</link>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1adc3eeedbb043cce76f509644dc17bce9">FIELD_STOPTIMEOUT</link>]&#32;=&#32;<link linkend="_dispatch__cfg_8h_1a0e75596069cf93f9128ae0f085240c5c">DEFAULT_STOPTIMEOUT</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatch01.c_str()][<link linkend="_dispatch__cfg_8h_1aa5e59b0a8fa4e7c944ba5ae490e33798">FIELD_IPCFILE</link>]&#32;=&#32;file_dir&#32;+&#32;<link linkend="_dispatch__cfg_8h_1a6c39097944ea16cb9fdb06ac3a6bd991">DEFAULT_IPCFILE</link>&#32;+&#32;dispatch01;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00057"/>00057 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00058"/>00058 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00059"/><link linkend="_classall__dispatch__cfg_1a6c396082d3d091ffcaf17d13b408acd5">00059</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a6c396082d3d091ffcaf17d13b408acd5">all_dispatch_cfg::getNumDispatchers</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00060"/>00060 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[<emphasis role="stringliteral">&quot;2_NumDispatchers&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00062"/>00062 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00063"/>00063 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00064"/><link linkend="_classall__dispatch__cfg_1a8e640b60b9b882c88fcd5ff5c8b514ee">00064</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classall__dispatch__cfg_1a8e640b60b9b882c88fcd5ff5c8b514ee">all_dispatch_cfg::getDispatcherXX_IP</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00065"/>00065 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;IP&quot;</emphasis>].asCString();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00067"/>00067 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00068"/>00068 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00069"/><link linkend="_classall__dispatch__cfg_1adea1daf1bde449c40f93a11ad38297be">00069</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1adea1daf1bde449c40f93a11ad38297be">all_dispatch_cfg::getDispatcherXX_Port</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00070"/>00070 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;Port&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00072"/>00072 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00073"/>00073 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00074"/><link linkend="_classall__dispatch__cfg_1a1378ca64565176db1546847972a0b4c1">00074</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a1378ca64565176db1546847972a0b4c1">all_dispatch_cfg::getDispatcherXX_NumThreads</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00075"/>00075 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;NumThreads&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00077"/>00077 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00078"/>00078 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00079"/><link linkend="_classall__dispatch__cfg_1aa1ed0af52a95019527159b09a42a16b2">00079</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classall__dispatch__cfg_1aa1ed0af52a95019527159b09a42a16b2">all_dispatch_cfg::getDispatcherXX_TuxCliProg</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00080"/>00080 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;TuxCliProg&quot;</emphasis>].asCString();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00082"/>00082 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00083"/>00083 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00084"/><link linkend="_classall__dispatch__cfg_1af189902c9c223a698b64ee34bdc53a1c">00084</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classall__dispatch__cfg_1af189902c9c223a698b64ee34bdc53a1c">all_dispatch_cfg::getDispatcherXX_TuxCliSetup</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00085"/>00085 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;TuxCliSetup&quot;</emphasis>].asCString();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00087"/>00087 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00088"/>00088 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00089"/><link linkend="_classall__dispatch__cfg_1ad1c57b8c24055cc6c0372c358f16745e">00089</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1ad1c57b8c24055cc6c0372c358f16745e">all_dispatch_cfg::getDispatcherXX_LogLevel</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00090"/>00090 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;LogLevel&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00092"/>00092 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00093"/>00093 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00094"/><link linkend="_classall__dispatch__cfg_1a7a3abf92793526b5e0c053e864f881e0">00094</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a7a3abf92793526b5e0c053e864f881e0">all_dispatch_cfg::getDispatcherXX_MaxConnections</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00095"/>00095 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;MaxConnections&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00097"/>00097 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00098"/>00098 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00099"/><link linkend="_classall__dispatch__cfg_1a692f455b0d88f54bb1ac7a8bb357cd6e">00099</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a692f455b0d88f54bb1ac7a8bb357cd6e">all_dispatch_cfg::getDispatcherXX_StopTimeout</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00100"/>00100 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;StopTimeout&quot;</emphasis>].asInt();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00102"/>00102 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00103"/>00103 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00104"/><link linkend="_classall__dispatch__cfg_1ab1bca3e1fccdd0cbc6690519ac8d6e6f">00104</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classall__dispatch__cfg_1ab1bca3e1fccdd0cbc6690519ac8d6e6f">all_dispatch_cfg::getDispatcherXX_IpcFile</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;dispatchXX)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00105"/>00105 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1a618d79c1569f58766bda6ae26d60862f">_m_json</link>[dispatchXX][<emphasis role="stringliteral">&quot;IpcFile&quot;</emphasis>].asCString();
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00107"/>00107 }
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00108"/>00108 
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00109"/><link linkend="_classall__dispatch__cfg_1ab44dfa948eee0327345cb1cd0b1ea514">00109</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classall__dispatch__cfg_1ab44dfa948eee0327345cb1cd0b1ea514">all_dispatch_cfg::show_all_config</link>()
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00110"/>00110 {
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;PLOG_DEBUG&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------------------&quot;</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;PLOG_DEBUG&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;CONFIG&#32;FILE:&#32;&quot;</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;v&#32;:&#32;<link linkend="_classall__dispatch__cfg_1a84709c1960ff66d7e3abdaf3b960ee64">dispatchers_cfg</link>)
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;{
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PLOG_DEBUG&#32;&#32;&lt;&lt;&#32;v;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;PLOG_DEBUG&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------------------&quot;</emphasis>;
<anchor xml:id="_dispatch__cfg_8cpp_source_1l00118"/>00118 }
</programlisting></section>
